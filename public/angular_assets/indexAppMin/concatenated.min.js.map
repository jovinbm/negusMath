{"version":3,"sources":["app.js","adirectives/accountOuter.js","adirectives/bannerDir.js","adirectives/contactUs.js","adirectives/createAccount.js","adirectives/footer.js","adirectives/logout.js","adirectives/postViewDir.js","adirectives/resendEmail.js","adirectives/signIn.js","adirectives/suggestedPostsDir.js","adirectives/title.js","adirectives/universalSearchBoxDir.js","controllers/popularCtrl.js","controllers/universalCtrl.js","filters/filters.js","services/functions.js","services/globals.js","services/mainFactory.js","services/popularStoriesService.js","services/socketIoService.js","aindexApp.js","controllers/mainCtrl.js"],"names":["angular","module","directive","$rootScope","restrict","link","$scope","$element","$attrs","userLoginState","changeUserLoginState","newState","templateUrl","newPostBanner","show","bannerClass","msg","$on","event","banner","toastr","showToast","toastType","text","clear","success","warning","closeButton","tapToDismiss","error","timeOut","clearToasts","controller","cfpLoadingBar","isLoading","isLoadingPercentage","changeIsLoadingPercentage","num","resp","status","isLoadingTrue","isLoadingFalse","signInBanner","registrationBanner","$http","validateContactUs","name","email","message","errors","length","sendContactUs","contactUsModel","post","formStatus","main","responseStatusHandler","errResp","createAccount","details","registrationDetails","firstName","lastName","username","password1","password2","invitationCode","errResponse","logoutClient","$filter","scope","postContent","postSummary","postTags","resendConfirmationEmail","userUniqueCuid","console","log","err","localUserLogin","loginData","loginFormModel","password","submitLocalLoginForm","getSuggestedPosts","getSuggestedPostsFromServer","postsArray","updateSuggestedPosts","suggestedPostsArray","suggestedPosts","goToTop","suggestedPostsCount","globals","template","defaultTitle","getDocumentTitle","$watch","$window","$location","mainSearchModel","queryString","requestedPage","performMainSearch","redirectToPage","$q","$log","PopularStoriesService","getPopularStories","getPopularStoriesFromServer","popularStories","updatePopularStories","$interval","socket","socketService","$document","initialRequests","getUserData","userData","broadcastUserData","isRegistered","emit","room","uniqueCuid","indexPageUrl","allData","currentHost","getLocationHost","showDisqus","host","search","duration","currentTime","showLoadingBannerDir","showLoadingBanner","this","hideLoadingBanner","someElement","element","document","getElementById","scrollToElement","$broadcast","clearBanners","startLoading","finishedLoading","pathWithFirstSlash","location","href","moment","format","updateCurrentTime","history","stateHistory","toState","toParams","fromState","fromParams","push","$$path","temp","back","window","backAngular","prevUrl","splice","path","filter","time","local","raw","Date","now","isDate","getTime","offset","Math","abs","span","MINUTE","HOUR","DAY","WEEK","YEAR","DECADE","round","join","createdAt","postIndex","posts","makeResp","theElement","$","imgElement","imgWrappedInDiv","addClass","wrap","find","replaceWith","html","Object","keys","forEach","index","textString","theElementString","highlight","checkSearchState","$state","current","$stateParams","hasOwnProperty","highLightThisText","textToHighlight","finalString","highlightDetails","theElement2","removeHighlight","theElement3","highlightPostTags","tag","prepare","timeAgo","postDate","postAbsoluteUrl","postPath","postHeading","authorName","removePostTagsHighlight","makeBanner","redirect","redirectPage","notify","type","reason","warn","factory","calcObjectLength","obj","len","prop","documentTitle","port","data","defaultDocumentTitle","changeDocumentTitle","newDocumentTitle","hostname","checkAccountStatus","getStatus","emailIsConfirmed","isApproved","showResendEmail","accountStatus","isBanned","theStatus","on","info","done","popularStoriesArray","url","io","connect","eventName","callback","args","arguments","$apply","apply","removeAllListeners","get","run","$templateCache","Utils","config","$stateProvider","$urlRouterProvider","$locationProvider","value","mainService","accountStatusIsGood"],"mappings":"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","file":"concatenated.min.js","sourcesContent":["//angular sanitize included in textAngular\nangular.module('app', [\n    'ui.bootstrap',\n    'cfp.loadingBar',\n    'angulartics',\n    'angulartics.google.analytics',\n    'angularMoment',\n    'ui.router',\n    'duScroll',\n    'ngFx',\n    'textAngular',\n    'angularUtils.directives.dirDisqus',\n    'ngTagsInput',\n    'ui.utils',\n    'ngFileUpload',\n    'toastr'\n]);","angular.module('app')\n    .directive('accountOuterScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //variable to hold state between local login and creating a new account\n                //values =  signIn, register\n                $scope.userLoginState = 'signIn';\n                $scope.changeUserLoginState = function (newState) {\n                    $scope.userLoginState = newState;\n                };\n            }\n        }\n    }]);","angular.module('app')\n    .directive('newPostBanner', ['$rootScope', function ($rootScope) {\n        return {\n            templateUrl: 'views/all/partials/templates/new_post_banner.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.newPostBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('newPostBanner', function (event, banner) {\n                    $scope.newPostBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.newPostBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('toastrDirective', ['$rootScope', 'toastr', function ($rootScope, toastr) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $rootScope.showToast = function (toastType, text) {\n                    switch (toastType) {\n                        case \"success\":\n                            toastr.clear();\n                            toastr.success(text);\n                            break;\n                        case \"warning\":\n                            toastr.clear();\n                            toastr.warning(text, 'Warning', {\n                                closeButton: true,\n                                tapToDismiss: true\n                            });\n                            break;\n                        case \"error\":\n                            toastr.clear();\n                            toastr.error(text, 'Error', {\n                                closeButton: true,\n                                tapToDismiss: true,\n                                timeOut: false\n                            });\n                            break;\n                        default:\n                            //clears current list of toasts\n                            toastr.clear();\n                    }\n                };\n\n                $rootScope.clearToasts = function () {\n                    toastr.clear();\n                };\n            }\n        }\n    }])\n    .directive('loadingBanner', ['$rootScope', function ($rootScope) {\n        var controller = ['$scope', '$rootScope', 'cfpLoadingBar', function ($scope, $rootScope, cfpLoadingBar) {\n\n            $rootScope.isLoading = true;\n            $rootScope.isLoadingPercentage = 0;\n            $rootScope.changeIsLoadingPercentage = function (num) {\n                $rootScope.isLoadingPercentage = num;\n            };\n\n            $rootScope.$on('cfpLoadingBar:loading', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:loaded', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:completed', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.isLoadingTrue = function () {\n                $rootScope.isLoading = true;\n            };\n            $rootScope.isLoadingFalse = function () {\n                $rootScope.isLoading = false;\n            };\n\n            $rootScope.$on('isLoadingTrue', function () {\n                $rootScope.isLoading = true;\n            });\n\n            $rootScope.$on('isLoadingFalse', function () {\n                $rootScope.isLoading = false;\n            });\n        }];\n\n        return {\n            templateUrl: 'views/all/partials/templates/loading_banner.html',\n            restrict: 'AE',\n            controller: controller\n        }\n    }])\n    .directive('signInBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.signInBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('signInBanner', function (event, banner) {\n                    $scope.signInBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.signInBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('registrationBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('registrationBanner', function (event, banner) {\n                    $scope.registrationBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.registrationBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }]);","angular.module('app')\n    .directive('contactUsScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.contactUsModel = {\n                    name: \"\",\n                    email: \"\",\n                    message: \"\"\n                };\n\n                function validateContactUs(name, email, message) {\n                    var errors = 0;\n\n                    if (!name || name.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter your name\");\n                        return -1\n                    } else if (!email || email.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter a valid email\");\n                        return -1\n                    } else if (!message || message.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Message field is empty\");\n                        return -1;\n                    } else if (errors == 0) {\n                        return 1;\n                    }\n                }\n\n                $scope.sendContactUs = function () {\n                    var formStatus = validateContactUs($scope.contactUsModel.name, $scope.contactUsModel.email, $scope.contactUsModel.message);\n                    if (formStatus == 1) {\n                        sendContactUs($scope.contactUsModel)\n                            .success(function (resp) {\n                                $scope.contactUsModel.name = \"\";\n                                $scope.contactUsModel.email = \"\";\n                                $scope.contactUsModel.message = \"\";\n                                $rootScope.main.responseStatusHandler(resp);\n                            })\n                            .error(function (errResp) {\n                                $rootScope.main.responseStatusHandler(errResp);\n                            });\n                    }\n                };\n\n                function sendContactUs(contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    }])\n    .directive('contactUs', [function () {\n        return {\n            templateUrl: 'views/all/partials/components/contact_us.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //depends on contactUsScope\n            }\n        }\n    }]);","angular.module('app')\n    .directive('createAccountScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\",\n                    invitationCode: \"\"\n                };\n\n                $scope.createAccount = function () {\n                    createAccount($scope.registrationDetails)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            $scope.registrationDetails.invitationCode = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function createAccount(details) {\n                    return $http.post('/createAccount', details);\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('mainFooter', [function () {\n        return {\n            templateUrl: 'views/all/partials/components/main_footer.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n            }\n        }\n    }]);","angular.module('app')\n    .directive('logoutScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.logoutClient = function () {\n                    logoutClient()\n                        .success(function (resp) {\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function logoutClient() {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('postContent', ['$filter', function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_content.html',\n            scope: {\n                postContent: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.postContent = $filter('preparePostContent')($scope.postContent);\n            }\n        }\n    }])\n    .directive('postSummary', ['$filter',function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_summary.html',\n            scope: {\n                postSummary: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.postSummary = $filter('preparePostSummary')($scope.postSummary);\n            }\n        }\n    }])\n    .directive('postTags', ['$filter',function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_tags.html',\n            scope: {\n                postTags: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n            }\n        }\n    }]);","angular.module('app')\n    .directive('resendEmailScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.resendConfirmationEmail = function (userUniqueCuid) {\n                    console.log(userUniqueCuid);\n                    resendConfirmationEmail(userUniqueCuid)\n                        .success(function (resp) {\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (err) {\n                            $rootScope.main.responseStatusHandler(err);\n                        })\n                };\n\n                function resendConfirmationEmail(userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('signInScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\"\n                };\n\n                $scope.submitLocalLoginForm = function () {\n                    localUserLogin($scope.loginFormModel)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function localUserLogin(loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('suggestedPosts', ['$rootScope', '$filter', '$http', function ($rootScope, $filter, $http) {\n        return {\n            templateUrl: 'views/all/partials/templates/suggested_posts.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $rootScope.main.goToTop();\n\n                $scope.suggestedPosts = [];\n                $scope.suggestedPostsCount = 0;\n\n                function getSuggestedPosts() {\n                    getSuggestedPostsFromServer()\n                        .success(function (resp) {\n                            if (resp.postsArray.length > 0) {\n                                updateSuggestedPosts(resp.postsArray);\n                            } else {\n                                //do nothing\n                            }\n                            $rootScope.main.responseStatusHandler(resp);\n\n                        })\n                        .error(function (errResp) {\n                            $rootScope.main.responseStatusHandler(errResp);\n                        });\n                }\n\n                getSuggestedPosts();\n\n                function getSuggestedPostsFromServer() {\n                    return $http.post('/api/getSuggestedPosts', {})\n                }\n\n                function updateSuggestedPosts(suggestedPostsArray) {\n                    if (suggestedPostsArray == []) {\n                        $scope.suggestedPosts = [];\n                    } else {\n                        $scope.suggestedPosts = $filter('preparePostsNoChange')(null, suggestedPostsArray);\n                    }\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('titleDirective', ['globals', function (globals) {\n        return {\n            template: '<title ng-bind=\"defaultTitle\">' + '</title>',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.defaultTitle = globals.getDocumentTitle();\n                $scope.$watch(globals.getDocumentTitle, function () {\n                    $scope.defaultTitle = globals.getDocumentTitle();\n                });\n            }\n        }\n    }]);","angular.module('app')\n    .directive('universalSearchBoxScope', ['$window', '$location', '$rootScope', 'globals', function ($window, $location, $rootScope, globals) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.mainSearchModel = {\n                    queryString: \"\",\n                    requestedPage: 1\n                };\n\n                $scope.performMainSearch = function () {\n                    if ($scope.mainSearchModel.queryString.length > 0) {\n                        $rootScope.main.redirectToPage('/search/posts/' + $scope.mainSearchModel.queryString + '/' + $scope.mainSearchModel.requestedPage);\n                    }\n                };\n            }\n        }\n    }]);","angular.module('app')\n    .controller('PopularStoriesController', ['$q', '$log', '$scope', '$rootScope', 'PopularStoriesService', 'globals',\n        function ($q, $log, $scope, $rootScope, PopularStoriesService, globals) {\n\n            $scope.popularStories = PopularStoriesService.getPopularStories();\n\n            function getPopularStories() {\n                PopularStoriesService.getPopularStoriesFromServer()\n                    .success(function (resp) {\n                        $rootScope.main.responseStatusHandler(resp);\n                        $scope.popularStories = PopularStoriesService.updatePopularStories(resp.popularStories);\n                    })\n                    .error(function (errResp) {\n                        $scope.popularStories = PopularStoriesService.updatePopularStories([]);\n                        $rootScope.main.responseStatusHandler(errResp);\n                    });\n            }\n\n            getPopularStories();\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnect', function () {\n                getPopularStories();\n            });\n        }\n    ]);","angular.module('app')\n    .controller('UniversalController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'socketService', 'globals', '$document',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, socketService, globals, $document) {\n\n            //index page url\n            $scope.indexPageUrl = globals.allData.indexPageUrl;\n\n            //website host\n            $rootScope.currentHost = globals.getLocationHost();\n\n            //disqus\n            $scope.showDisqus = $location.host().search(\"negusmath\") !== -1;\n\n            //scrolling functions\n            var duration = 0; //milliseconds\n            var offset = 40; //pixels; adjust for floating menu, context etc\n            //Scroll to #some-id with 30 px \"padding\"\n            //Note: Use this in a directive, not with document.getElementById\n\n            $rootScope.main = {\n                currentTime: \"\",\n\n                showLoadingBannerDir: false,\n\n                showLoadingBanner: function () {\n                    this.showLoadingBannerDir = true;\n                },\n\n                hideLoadingBanner: function () {\n                    this.showLoadingBannerDir = false;\n                },\n\n                goToTop: function () {\n                    var someElement = angular.element(document.getElementById('top'));\n                    $document.scrollToElement(someElement, 80, duration);\n                },\n\n                broadcastUserData: function () {\n                    $rootScope.$broadcast('userDataChanges');\n                },\n\n                responseStatusHandler: function (resp) {\n                    $filter('responseFilter')(resp);\n                },\n\n                clearBanners: function () {\n                    $rootScope.$broadcast('clearBanners');\n                },\n\n                isLoading: true,\n\n                startLoading: function () {\n                    this.isLoading = true;\n                },\n\n                finishedLoading: function () {\n                    $rootScope.isLoading = false;\n                },\n\n                redirectToPage: function (pathWithFirstSlash) {\n                    $window.location.href = globals.getLocationHost() + pathWithFirstSlash;\n                }\n\n            };\n\n            //=====================time functions=======================\n            //set current Date\n            $scope.currentTime = moment().format(\"ddd, MMM D, H:mm\");\n            var updateCurrentTime = function () {\n                $scope.currentTime = moment().format(\"ddd, MMM D, H:mm\");\n            };\n            $interval(updateCurrentTime, 20000, 0, true);\n\n            //======================end time functions===================\n\n            //initial requests\n            function initialRequests() {\n                socketService.getUserData()\n                    .success(function (resp) {\n                        $rootScope.main.responseStatusHandler(resp);\n                        $scope.userData = globals.userData(resp.userData);\n                        $rootScope.main.broadcastUserData();\n\n                        if ($scope.userData.isRegistered) {\n                            //join a socketRoom for websocket connection, equivalent to user's uniqueCuid\n                            socket.emit('joinRoom', {\n                                room: resp.userData.uniqueCuid\n                            });\n                        }\n                    })\n                    .error(function (errResponse) {\n                        $rootScope.main.responseStatusHandler(errResponse);\n                    });\n            }\n\n            initialRequests();\n\n            //$scope functions to be used in other controllers and directives\n            //back navigation functionality\n            var history = [];\n            $rootScope.stateHistory = [];\n            $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n                history.push($location.$$path);\n                //push the previous state also\n                var temp = {};\n                temp[fromState.name] = fromParams;\n                $rootScope.stateHistory.push(temp);\n            });\n\n            $rootScope.back = function () {\n                window.history.back();\n            };\n\n            $rootScope.backAngular = function () {\n                var prevUrl = history.length > 1 ? history.splice(-2)[0] : \"/\";\n                $location.path(prevUrl);\n            };\n\n            $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n                $rootScope.main.clearBanners();\n                $rootScope.clearToasts();\n            });\n\n            //notification banner\n            //$rootScope.showNotfBanner = function (type, text) {\n            //    console.log(type + ' ' + text);\n            //    switch (type) {\n            //        case \"success\":\n            //            notifications.showSuccess({\n            //                message: text\n            //            });\n            //            break;\n            //        case \"warning\":\n            //            notifications.showWarning({\n            //                message: text\n            //            });\n            //            break;\n            //        case \"error\":\n            //            notifications.showError({\n            //                message: text\n            //            });\n            //            break;\n            //        default:\n            //        //clears current list of toasts\n            //        //do nothing\n            //    }\n            //};\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnect', function () {\n                initialRequests();\n            });\n        }\n    ]);","angular.module('app')\n    .filter(\"timeago\", [function () {\n        //time: the time\n        //local: compared to what time? default: now\n        //raw: whether you want in a format of \"5 minutes ago\", or \"5 minutes\"\n        return function (time, local, raw) {\n            if (!time) return \"never\";\n\n            if (!local) {\n                (local = Date.now())\n            }\n\n            if (angular.isDate(time)) {\n                time = time.getTime();\n            } else if (typeof time === \"string\") {\n                time = new Date(time).getTime();\n            }\n\n            if (angular.isDate(local)) {\n                local = local.getTime();\n            } else if (typeof local === \"string\") {\n                local = new Date(local).getTime();\n            }\n\n            if (typeof time !== 'number' || typeof local !== 'number') {\n                return;\n            }\n\n            var\n                offset = Math.abs((local - time) / 1000),\n                span = [],\n                MINUTE = 60,\n                HOUR = 3600,\n                DAY = 86400,\n                WEEK = 604800,\n                MONTH = 2629744,\n                YEAR = 31556926,\n                DECADE = 315569260;\n\n            if (offset <= MINUTE)              span = ['', raw ? 'now' : 'less than a minute'];\n            else if (offset < (MINUTE * 60))   span = [Math.round(Math.abs(offset / MINUTE)), 'min'];\n            else if (offset < (HOUR * 24))     span = [Math.round(Math.abs(offset / HOUR)), 'hr'];\n            else if (offset < (DAY * 7))       span = [Math.round(Math.abs(offset / DAY)), 'day'];\n            else if (offset < (WEEK * 52))     span = [Math.round(Math.abs(offset / WEEK)), 'week'];\n            else if (offset < (YEAR * 10))     span = [Math.round(Math.abs(offset / YEAR)), 'year'];\n            else if (offset < (DECADE * 100))  span = [Math.round(Math.abs(offset / DECADE)), 'decade'];\n            else                               span = ['', 'a long time'];\n\n            span[1] += (span[0] === 0 || span[0] > 1) ? 's' : '';\n            span = span.join(' ');\n\n            if (raw === true) {\n                return span;\n            }\n            return (time <= local) ? span + ' ago' : 'in ' + span;\n        }\n    }])\n    .filter(\"getTimeAgo\", ['$filter', function ($filter) {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return $filter('timeago')(createdAt);\n        }\n    }])\n    .filter(\"getPostDate\", [function () {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return moment(createdAt).format(\"ddd, MMM D, H:mm\");\n        }\n    }])\n    .filter(\"getPostAbsoluteUrl\", [function () {\n        return function (postIndex) {\n            return 'http://www.negusmath.com/#!/home/post/' + postIndex;\n        }\n    }])\n    .filter(\"getPostPath\", [function () {\n        return function (postIndex) {\n            return '/#!/home/post/' + postIndex;\n        }\n    }])\n    .filter(\"makeVideoIframesResponsive\", [function () {\n        //making embedded videos responsive\n        return function (post, posts) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(post) {\n                if (post.postSummary) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postSummary + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postSummary = theElement.html();\n\n                }\n                if (post.postContent) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postContent + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postContent = theElement.html();\n                }\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return makeResp(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = makeResp(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"getVideoResponsiveVersion\", [function () {\n        //making embedded videos responsive\n        return function (textString) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(textString) {\n                //convert the element to string\n                theElement = $(\"<div>\" + textString + \"</div>\");\n\n                //find the video iframe elements\n                imgElement = $('img.ta-insert-video', theElement);\n\n                //only perform operation if there are iframes available\n                if (imgElement.length > 0) {\n\n                    //add class and wrap in div\n                    imgWrappedInDiv = imgElement\n                        .addClass('embed-responsive-item')\n                        .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                    //replace in original\n                    theElement.find('img').replaceWith(imgWrappedInDiv);\n                }\n                return theElement.html();\n            }\n\n            if (textString) {\n                return makeResp(textString)\n            } else {\n                return textString;\n            }\n        }\n    }])\n    .filter(\"highlightText\", ['$rootScope', function ($rootScope) {\n        //making embedded videos responsive\n        //the highlight variable should be a boolean to make the function\n        //know if to highlight or not\n        //if false then the function will remove highlight\n        return function (theElementString, highlight) {\n            //text is highlighted only if the present or previous state was search\n            //this fn checks if the present or previous state was search, and returns an object with status false if not\n            //if true, the returned object carries the queryString with it\n\n            function checkSearchState() {\n                //check latest state\n                if ($rootScope.$state.current.name == 'home.search') {\n                    return {\n                        status: true,\n                        queryString: $rootScope.$stateParams.queryString || \"\"\n                    }\n                } else if ($rootScope.stateHistory.length > 0) {\n                    //check if previous state was search and current state is post\n                    if ($rootScope.stateHistory[$rootScope.stateHistory.length - 1].hasOwnProperty('home.search') && $rootScope.$state.current.name == 'home.post') {\n                        //checking the previous state\n                        return {\n                            status: true,\n                            queryString: $rootScope.stateHistory[$rootScope.stateHistory.length - 1]['home.search'].queryString\n                        }\n                    } else {\n                        return {\n                            status: false\n                        }\n                    }\n                } else {\n                    return {\n                        status: false\n                    }\n                }\n            }\n\n            function highLightThisText(textToHighlight) {\n                if (highlight) {\n                    var finalString = textToHighlight;\n                    var highlightDetails = checkSearchState();\n                    if (highlightDetails.status === true) {\n                        //highlight\n                        var theElement = $(\"<div>\" + textToHighlight + \"</div>\");\n                        $(theElement).highlight(highlightDetails.queryString);\n                        finalString = theElement.html();\n                    } else {\n                        //remove highlight\n                        var theElement2 = $(\"<div>\" + textToHighlight + \"</div>\");\n                        $(theElement2).removeHighlight();\n                        finalString = theElement2.html();\n                    }\n                } else {\n                    //remove highlight\n                    var theElement3 = $(\"<div>\" + textToHighlight + \"</div>\");\n                    $(theElement3).removeHighlight();\n                    finalString = theElement3.html();\n                }\n\n                return finalString;\n            }\n\n            return highLightThisText(theElementString);\n\n        }\n    }])\n    .filter(\"preparePosts\", ['$filter', function ($filter) {\n        //making embedded videos responsive\n        return function (post, posts) {\n            function highlightPostTags(postTags) {\n                if (postTags.length > 0) {\n                    postTags.forEach(function (tag, index) {\n                        postTags[index].text = $filter('highlightText')(tag.text, true);\n                    });\n                }\n\n                return postTags;\n            }\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                post.postHeading = $filter('highlightText')(post.postHeading, true);\n                post.authorName = $filter('highlightText')(post.authorName, true);\n                post.postSummary = $filter('highlightText')($filter('getVideoResponsiveVersion')(post.postSummary), true);\n                post.postContent = $filter('highlightText')($filter('getVideoResponsiveVersion')(post.postContent), true);\n                post.postTags = highlightPostTags(post.postTags);\n\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"preparePostSummary\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postSummary) {\n\n            console.log(\"postSummary called\");\n\n            function prepare(postContent) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postSummary), true);\n            }\n\n            if (postSummary) {\n                return prepare(postSummary);\n            } else {\n\n                return postSummary;\n            }\n        }\n    }])\n    .filter(\"preparePostContent\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postContent) {\n\n            function prepare(postContent) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postContent), true);\n            }\n\n            if (postContent) {\n                return prepare(postContent);\n            } else {\n\n                return postContent;\n            }\n        }\n    }])\n    .filter(\"preparePostSummary\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postSummary) {\n\n            function prepare(postSummary) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postSummary), true);\n            }\n\n            if (postSummary) {\n                return prepare(postSummary);\n            } else {\n\n                return postSummary;\n            }\n        }\n    }])\n    .filter(\"removeHighlights\", ['$filter', function ($filter) {\n        //making embedded videos responsive\n        return function (post, posts) {\n            function removePostTagsHighlight(postTags) {\n                if (postTags.length > 0) {\n                    postTags.forEach(function (tag, index) {\n                        postTags[index].text = $filter('highlightText')(tag.text, false);\n                    });\n                }\n\n                return postTags;\n            }\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                post.postHeading = $filter('highlightText')(post.postHeading, false);\n                post.authorName = $filter('highlightText')(post.authorName, false);\n                post.postSummary = $filter('highlightText')(post.postSummary, false);\n                post.postContent = $filter('highlightText')(post.postContent, false);\n                post.postTags = removePostTagsHighlight(post.postTags);\n\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"preparePostsNoChange\", ['$filter', function ($filter) {\n        //does not change the post to make it responsive and does not highlight\n        return function (post, posts) {\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"responseFilter\", ['$q', '$log', '$window', '$rootScope', function ($q, $log, $window, $rootScope) {\n        //making embedded videos responsive\n        return function (resp) {\n            function makeBanner(show, bannerClass, msg) {\n                return {\n                    show: show ? true : false,\n                    bannerClass: bannerClass,\n                    msg: msg\n                }\n            }\n\n            if (resp !== null && typeof resp === 'object') {\n                if (resp.redirect) {\n                    if (resp.redirect) {\n                        $window.location.href = resp.redirectPage;\n                    }\n                }\n                if (resp.notify) {\n                    if (resp.type && resp.msg) {\n                        $rootScope.showToast(resp.type, resp.msg);\n                        //$rootScope.showNotfBanner(resp.type, resp.msg);\n                    }\n                }\n                if (resp.banner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('universalBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.newPostBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('newPostBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.signInBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('signInBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.registrationBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('registrationBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.reason) {\n                    $log.warn(resp.reason);\n                }\n            } else {\n                //do nothing\n            }\n\n            return true;\n        }\n    }]);","angular.module('app')\n\n    .factory('fN', ['$q', '$location', '$window', '$rootScope', 'socketService',\n        function ($q, $location, $window, $rootScope, socketService) {\n            return {\n                calcObjectLength: function (obj) {\n                    var len = 0;\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            len++;\n                        }\n                    }\n                    return len\n                }\n            };\n        }]);","angular.module('app')\n    .factory('globals', ['$q', '$location', '$rootScope',\n        function ($q, $location, $rootScope) {\n            var userData = {};\n            var allData = {\n                documentTitle: \"Negus Math - College Level Advanced Mathematics for Kenya Students\",\n                indexPageUrl: $location.port() ? \"http://\" + $location.host() + \":\" + $location.port() + \"/index\" : $scope.indexPageUrl = \"http://\" + $location.host() + \"/index\"\n            };\n\n            return {\n\n                userData: function (data) {\n                    if (data) {\n                        userData = data;\n                        return userData;\n                    } else {\n                        return userData;\n                    }\n                },\n\n                allData: allData,\n\n                getDocumentTitle: function () {\n                    return allData.documentTitle\n                },\n\n                defaultDocumentTitle: function () {\n                    allData.documentTitle = \"Negus Math - College Level Advanced Mathematics for Kenya Students\";\n                },\n\n                changeDocumentTitle: function (newDocumentTitle) {\n                    if (newDocumentTitle) {\n                        allData.documentTitle = newDocumentTitle;\n                    }\n                    return allData.documentTitle\n                },\n\n                getLocationHost: function () {\n                    if (document.location.hostname.search(\"negusmath\") !== -1) {\n                        return \"//www.negusmath.com\";\n                    } else {\n                        if ($location.port()) {\n                            return 'http://localhost' + \":\" + $location.port();\n                        } else {\n                            return 'http://localhost';\n                        }\n                    }\n                },\n\n                checkAccountStatus: function () {\n                    function getStatus(userData) {\n                        if (userData && Object.keys(userData) > 0) {\n                            if (userData.isRegistered) {\n                                if (!userData.emailIsConfirmed) {\n                                    return {\n                                        show: true,\n                                        bannerClass: \"alert alert-warning\",\n                                        msg: \"Please confirm your account by clicking the confirmation link we sent on your email. Please also check your spam folder\",\n                                        showResendEmail: true,\n                                        accountStatus: false\n                                    };\n                                } else if (userData.isApproved === false) {\n                                    return {\n                                        show: true,\n                                        bannerClass: \"alert alert-warning\",\n                                        msg: \"Your account is awaiting approval from the administrators. Please allow up to 3 business days. You will get an email notification as soon as your account is approved.\",\n                                        showResendEmail: false,\n                                        accountStatus: false\n                                    };\n                                } else if (userData.isBanned) {\n                                    if (userData.isBanned.status === true) {\n                                        //checking banned status\n                                        return {\n                                            show: true,\n                                            bannerClass: \"alert alert-warning\",\n                                            msg: \"Your have been banned from this service. Please contact the administrators for more information\",\n                                            showResendEmail: false,\n                                            accountStatus: false\n                                        };\n                                    } else {\n                                        return {\n                                            show: false,\n                                            bannerClass: \"\",\n                                            msg: \"\",\n                                            showResendEmail: false,\n                                            accountStatus: true\n                                        };\n                                    }\n                                } else {\n                                    return {\n                                        show: false,\n                                        bannerClass: \"\",\n                                        msg: \"\",\n                                        showResendEmail: false,\n                                        accountStatus: true\n                                    };\n                                }\n                            } else {\n                                console.log(userData);\n                                return {\n                                    show: true,\n                                    bannerClass: \"alert alert-warning\",\n                                    msg: \"You are not registered. Please reload this page to create an account\",\n                                    showResendEmail: false,\n                                    accountStatus: false\n                                };\n                            }\n                        } else {\n                            //userData might not have loaded yet here, forgive this part\n                            return {\n                                show: false,\n                                bannerClass: \"\",\n                                msg: \"\",\n                                showResendEmail: false,\n                                accountStatus: true\n                            };\n                        }\n                    }\n\n                    var theStatus = getStatus(userData);\n                    $rootScope.$broadcast('universalBanner', theStatus);\n                    return theStatus.accountStatus;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('mainService', ['$log', '$window', '$rootScope', 'socket',\n        function ($log, $window, $rootScope, socket) {\n\n            socket.on('reconnect', function () {\n                $log.info(\"'reconnect sequence' triggered\");\n                $rootScope.$broadcast('reconnect');\n            });\n\n            return {\n                done: function () {\n                    return 1;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('PopularStoriesService', ['$filter', '$log', '$http', '$window', '$rootScope', 'socket',\n        function ($filter, $log, $http, $window, $rootScope, socket) {\n\n            var popularStories = [];\n\n            return {\n\n                getPopularStories: function () {\n                    return popularStories;\n                },\n\n                getPopularStoriesFromServer: function () {\n                    return $http.post('/api/getPopularStories', {})\n                },\n\n                updatePopularStories: function (popularStoriesArray) {\n                    if (popularStoriesArray == []) {\n                        popularStories = [];\n                    } else {\n                        popularStories = $filter('preparePostsNoChange')(null, popularStoriesArray);\n                    }\n                    return popularStoriesArray;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('socket', ['$log', '$location', '$rootScope',\n        function ($log, $location, $rootScope) {\n            var url;\n\n            if (document.location.hostname.search(\"negusmath\") !== -1) {\n                url = \"//www.negusmath.com\";\n            } else {\n                if ($location.port()) {\n                    url = 'http://localhost' + \":\" + $location.port();\n                } else {\n                    url = 'http://localhost';\n                }\n            }\n\n            var socket = io.connect(url);\n            //return socket;\n            return {\n                on: function (eventName, callback) {\n                    socket.on(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                },\n\n                emit: function (eventName, data, callback) {\n                    socket.emit(eventName, data, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            if (callback) {\n                                callback.apply(socket, args);\n                            }\n                        });\n                    });\n                },\n\n                removeAllListeners: function (eventName, callback) {\n                    socket.removeAllListeners(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                }\n            };\n        }\n    ])\n\n\n    .factory('socketService', ['$log', '$http', '$rootScope',\n        function ($log, $http, $rootScope) {\n\n            return {\n\n                getUserData: function () {\n                    return $http.get('/api/getUserData');\n                },\n\n                createAccount: function (details) {\n                    return $http.post('/createAccount', details);\n                },\n\n                localUserLogin: function (loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                },\n\n                resendConfirmationEmail: function (userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                },\n\n                sendContactUs: function (contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    ])\n\n    .factory('logoutService', ['$http',\n        function ($http) {\n            return {\n\n                logoutClient: function () {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }]);","angular.module('app')\n    .run(['$templateCache', '$http', '$rootScope', '$state', '$stateParams', function ($templateCache, $http, $rootScope, $state, $stateParams) {\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n        $rootScope.Utils = {\n            keys: Object.keys\n        };\n    }])\n\n    .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', function ($stateProvider, $urlRouterProvider, $locationProvider) {\n        //    $urlRouterProvider\n        //        .when(\"/home/stream/\", '/home/stream/1')\n        //        .when(\"/home/post/\", '/home')\n        //        .when(\"/home/editPost/\", '/home')\n        //        .when(\"/home/search/\", '/home/')\n        //        .otherwise(\"/home\");\n        //\n        //    $stateProvider\n        //        .state('home', {\n        //            url: '/home',\n        //        })\n        //        .state('home.post', {\n        //            url: '/post/:postIndex',\n        //            templateUrl: 'views/all/partials/views/home/full_post.html'\n        //        })\n        //        .state('home.newPost', {\n        //            url: '/newPost',\n        //            templateUrl: 'views/all/partials/views/home/new_post.html'\n        //        })\n        //        .state('home.editPost', {\n        //            url: '/editPost/:postIndex',\n        //            templateUrl: 'views/all/partials/views/home/edit_post.html'\n        //        })\n        //        .state('home.search', {\n        //            url: '/search/:queryString/:pageNumber',\n        //            templateUrl: 'views/search/search_results.html'\n        //        })\n        //        .state('users', {\n        //            url: '/users',\n        //            templateUrl: 'views/all/partials/views/users/users.html'\n        //        })\n        //        .state(\"otherwise\", {url: '/home'});\n\n        //$locationProvider\n        //    .html5Mode(false)\n        //    .hashPrefix('!');\n    }])\n    .value('duScrollOffset', 60);","angular.module('app')\n    .controller('MainController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'mainService', 'socketService', 'globals',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, mainService, socketService, globals) {\n\n            //function that determines if it's okay for the user to proceed\n            $scope.checkAccountStatus = function (userData) {\n                if (userData) {\n                    if (userData.isRegistered) {\n                        if (userData.emailIsConfirmed == false) {\n                            return false;\n                        } else {\n                            if (userData.isApproved === false) {\n                                return false\n                            } else if (userData.isBanned) {\n                                if (userData.isBanned.status === true) {\n                                    //checking banned status\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            } else {\n                                return true;\n                            }\n                        }\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            };\n\n            //variable that holds the account status\n            $scope.accountStatusIsGood = false;\n\n            $rootScope.$on('userDataChanges', function () {\n                $scope.accountStatusIsGood = $scope.checkAccountStatus(globals.userData);\n            });\n        }\n    ]);"],"sourceRoot":"/source/"}