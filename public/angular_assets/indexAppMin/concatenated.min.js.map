{"version":3,"sources":["app.js","controllers/popularCtrl.js","controllers/universalCtrl.js","filters/filters.js","adirectives/accountOuter.js","adirectives/bannerDir.js","adirectives/contactUs.js","adirectives/createAccount.js","adirectives/footer.js","adirectives/logout.js","adirectives/postViewDir.js","adirectives/resendEmail.js","adirectives/signIn.js","adirectives/suggestedPostsDir.js","adirectives/title.js","adirectives/universalSearchBoxDir.js","services/functions.js","services/globals.js","services/mainFactory.js","services/popularStoriesService.js","services/socketIoService.js","aindexApp.js","controllers/mainCtrl.js"],"names":["angular","module","controller","$q","$log","$scope","$rootScope","PopularStoriesService","globals","getPopularStories","getPopularStoriesFromServer","success","resp","main","responseStatusHandler","popularStories","updatePopularStories","error","errResp","$on","$filter","$interval","$window","$location","socket","socketService","$document","initialRequests","getUserData","userData","broadcastUserData","isRegistered","emit","room","uniqueCuid","errResponse","indexPageUrl","allData","currentHost","getLocationHost","showDisqus","host","search","duration","currentTime","showLoadingBannerDir","showLoadingBanner","this","hideLoadingBanner","goToTop","someElement","element","document","getElementById","scrollToElement","$broadcast","clearBanners","isLoading","startLoading","finishedLoading","redirectToPage","pathWithFirstSlash","location","href","moment","format","updateCurrentTime","history","stateHistory","event","toState","toParams","fromState","fromParams","push","$$path","temp","name","back","window","backAngular","prevUrl","length","splice","path","clearToasts","filter","time","local","raw","Date","now","isDate","getTime","offset","Math","abs","span","MINUTE","HOUR","DAY","WEEK","YEAR","DECADE","round","join","createdAt","postIndex","post","posts","makeResp","postSummary","theElement","$","imgElement","imgWrappedInDiv","addClass","wrap","find","replaceWith","html","postContent","Object","keys","forEach","index","textString","theElementString","highlight","checkSearchState","$state","current","status","queryString","$stateParams","hasOwnProperty","highLightThisText","textToHighlight","finalString","highlightDetails","theElement2","removeHighlight","theElement3","highlightPostTags","postTags","tag","text","prepare","timeAgo","postDate","postAbsoluteUrl","postPath","postHeading","authorName","console","log","removePostTagsHighlight","makeBanner","show","bannerClass","msg","redirect","redirectPage","notify","type","showToast","banner","newPostBanner","signInBanner","registrationBanner","reason","warn","directive","restrict","link","$element","$attrs","userLoginState","changeUserLoginState","newState","templateUrl","toastr","toastType","clear","warning","closeButton","tapToDismiss","timeOut","cfpLoadingBar","isLoadingPercentage","changeIsLoadingPercentage","num","isLoadingTrue","isLoadingFalse","$http","validateContactUs","email","message","errors","sendContactUs","contactUsModel","formStatus","createAccount","details","registrationDetails","firstName","lastName","username","password1","password2","invitationCode","logoutClient","scope","resendConfirmationEmail","userUniqueCuid","err","localUserLogin","loginData","loginFormModel","password","submitLocalLoginForm","getSuggestedPosts","getSuggestedPostsFromServer","postsArray","updateSuggestedPosts","suggestedPostsArray","suggestedPosts","suggestedPostsCount","template","defaultTitle","getDocumentTitle","$watch","mainSearchModel","requestedPage","performMainSearch","factory","calcObjectLength","obj","len","prop","documentTitle","port","data","defaultDocumentTitle","changeDocumentTitle","newDocumentTitle","hostname","checkAccountStatus","getStatus","emailIsConfirmed","isApproved","showResendEmail","accountStatus","isBanned","theStatus","on","info","done","popularStoriesArray","url","io","connect","eventName","callback","args","arguments","$apply","apply","removeAllListeners","get","run","$templateCache","Utils","config","$stateProvider","$urlRouterProvider","$locationProvider","value","mainService","accountStatusIsGood"],"mappings":"AACAA,QAAAC,OAAA,OACA,eACA,iBACA,cACA,+BACA,gBACA,YACA,WACA,OACA,cACA,oCACA,cACA,WACA,eACA,WCfAD,QAAAC,OAAA,OACAC,WAAA,4BAAA,KAAA,OAAA,SAAA,aAAA,wBAAA,UACA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,QAAAC,KACAF,EAAAG,8BACAC,QAAA,SAAAC,GACAN,EAAAO,KAAAC,sBAAAF,GACAP,EAAAU,eAAAR,EAAAS,qBAAAJ,EAAAG,kBAEAE,MAAA,SAAAC,GACAb,EAAAU,eAAAR,EAAAS,yBACAV,EAAAO,KAAAC,sBAAAI,KAVAb,EAAAU,eAAAR,EAAAE,oBAcAA,IAIAH,EAAAa,IAAA,YAAA,WACAV,SCvBAT,QAAAC,OAAA,OACAC,WAAA,uBAAA,KAAA,UAAA,OAAA,YAAA,UAAA,YAAA,SAAA,aAAA,SAAA,gBAAA,UAAA,YACA,SAAAC,EAAAiB,EAAAhB,EAAAiB,EAAAC,EAAAC,EAAAlB,EAAAC,EAAAkB,EAAAC,EAAAjB,EAAAkB,GA0EA,QAAAC,KACAF,EAAAG,cACAjB,QAAA,SAAAC,GACAN,EAAAO,KAAAC,sBAAAF,GACAP,EAAAwB,SAAArB,EAAAqB,SAAAjB,EAAAiB,UACAvB,EAAAO,KAAAiB,oBAEAzB,EAAAwB,SAAAE,cAEAP,EAAAQ,KAAA,YACAC,KAAArB,EAAAiB,SAAAK,eAIAjB,MAAA,SAAAkB,GACA7B,EAAAO,KAAAC,sBAAAqB,KAtFA9B,EAAA+B,aAAA5B,EAAA6B,QAAAD,aAGA9B,EAAAgC,YAAA9B,EAAA+B,kBAGAlC,EAAAmC,WAAA,KAAAjB,EAAAkB,OAAAC,OAAA,YAGA,IAAAC,GAAA,CAKArC,GAAAO,MACA+B,YAAA,GAEAC,sBAAA,EAEAC,kBAAA,WACAC,KAAAF,sBAAA,GAGAG,kBAAA,WACAD,KAAAF,sBAAA,GAGAI,QAAA,WACA,GAAAC,GAAAlD,QAAAmD,QAAAC,SAAAC,eAAA,OACA3B,GAAA4B,gBAAAJ,EAAA,GAAAP,IAGAb,kBAAA,WACAxB,EAAAiD,WAAA,oBAGAzC,sBAAA,SAAAF,GACAQ,EAAA,kBAAAR,IAGA4C,aAAA,WACAlD,EAAAiD,WAAA,iBAGAE,WAAA,EAEAC,aAAA,WACAX,KAAAU,WAAA,GAGAE,gBAAA,WACArD,EAAAmD,WAAA,GAGAG,eAAA,SAAAC,GACAvC,EAAAwC,SAAAC,KAAAvD,EAAA+B,kBAAAsB,IAOAxD,EAAAuC,YAAAoB,SAAAC,OAAA,mBACA,IAAAC,GAAA,WACA7D,EAAAuC,YAAAoB,SAAAC,OAAA,oBAEA5C,GAAA6C,EAAA,IAAA,GAAA,GAwBAvC,GAIA,IAAAwC,KACA7D,GAAA8D,gBACA9D,EAAAa,IAAA,sBAAA,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,GACAN,EAAAO,KAAAnD,EAAAoD,OAEA,IAAAC,KACAA,GAAAJ,EAAAK,MAAAJ,EACAnE,EAAA8D,aAAAM,KAAAE,KAGAtE,EAAAwE,KAAA,WACAC,OAAAZ,QAAAW,QAGAxE,EAAA0E,YAAA,WACA,GAAAC,GAAAd,EAAAe,OAAA,EAAAf,EAAAgB,OAAA,IAAA,GAAA,GACA5D,GAAA6D,KAAAH,IAGA3E,EAAAa,IAAA,oBAAA,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,GACAnE,EAAAO,KAAA2C,eACAlD,EAAA+E,gBA8BA/E,EAAAa,IAAA,YAAA,WACAQ,SCvJA3B,QAAAC,OAAA,OACAqF,OAAA,WAAA,WAIA,MAAA,UAAAC,EAAAC,EAAAC,GACA,IAAAF,EAAA,MAAA,OAkBA,IAhBAC,IACAA,EAAAE,KAAAC,OAGA3F,QAAA4F,OAAAL,GACAA,EAAAA,EAAAM,UACA,gBAAAN,KACAA,EAAA,GAAAG,MAAAH,GAAAM,WAGA7F,QAAA4F,OAAAJ,GACAA,EAAAA,EAAAK,UACA,gBAAAL,KACAA,EAAA,GAAAE,MAAAF,GAAAK,WAGA,gBAAAN,IAAA,gBAAAC,GAAA,CAIA,GACAM,GAAAC,KAAAC,KAAAR,EAAAD,GAAA,KACAU,KACAC,EAAA,GACAC,EAAA,KACAC,EAAA,MACAC,EAAA,OAEAC,EAAA,SACAC,EAAA,SAcA,OAZAN,GAAAC,GAAAJ,GAAA,GAAAL,EAAA,MAAA,sBACA,GAAAS,EAAAJ,GAAAC,KAAAS,MAAAT,KAAAC,IAAAF,EAAAI,IAAA,OACA,GAAAC,EAAAL,GAAAC,KAAAS,MAAAT,KAAAC,IAAAF,EAAAK,IAAA,MACA,EAAAC,EAAAN,GAAAC,KAAAS,MAAAT,KAAAC,IAAAF,EAAAM,IAAA,OACA,GAAAC,EAAAP,GAAAC,KAAAS,MAAAT,KAAAC,IAAAF,EAAAO,IAAA,QACA,GAAAC,EAAAR,GAAAC,KAAAS,MAAAT,KAAAC,IAAAF,EAAAQ,IAAA,QACA,IAAAC,EAAAT,GAAAC,KAAAS,MAAAT,KAAAC,IAAAF,EAAAS,IAAA,WACA,GAAA,eAEAN,EAAA,IAAA,IAAAA,EAAA,IAAAA,EAAA,GAAA,EAAA,IAAA,GACAA,EAAAA,EAAAQ,KAAA,KAEAhB,KAAA,EACAQ,EAEAT,GAAAD,EAAAU,EAAA,OAAA,MAAAA,OAGAX,OAAA,cAAA,UAAA,SAAAlE,GAEA,MAAA,UAAAsF,GACA,MAAAtF,GAAA,WAAAsF,OAGApB,OAAA,eAAA,WAEA,MAAA,UAAAoB,GACA,MAAA1C,QAAA0C,GAAAzC,OAAA,wBAGAqB,OAAA,sBAAA,WACA,MAAA,UAAAqB,GACA,MAAA,yCAAAA,MAGArB,OAAA,eAAA,WACA,MAAA,UAAAqB,GACA,MAAA,iBAAAA,MAGArB,OAAA,8BAAA,WAEA,MAAA,UAAAsB,EAAAC,GAKA,QAAAC,GAAAF,GA0CA,MAzCAA,GAAAG,cAEAC,EAAAC,EAAA,QAAAL,EAAAG,YAAA,UAGAG,EAAAD,EAAA,sBAAAD,GAGAE,EAAAhC,OAAA,IAGAiC,EAAAD,EACAE,SAAA,yBACAC,KAAA,+DAGAL,EAAAM,KAAA,OAAAC,YAAAJ,IAEAP,EAAAG,YAAAC,EAAAQ,QAGAZ,EAAAa,cAEAT,EAAAC,EAAA,QAAAL,EAAAa,YAAA,UAGAP,EAAAD,EAAA,sBAAAD,GAGAE,EAAAhC,OAAA,IAGAiC,EAAAD,EACAE,SAAA,yBACAC,KAAA,+DAGAL,EAAAM,KAAA,OAAAC,YAAAJ,IAEAP,EAAAa,YAAAT,EAAAQ,QAEAZ,EA9CA,GAAAI,GACAE,EACAC,CA+CA,OAAAP,GACAc,OAAAC,KAAAf,GAAA1B,OAAA,EACA4B,EAAAF,GAEAA,EAEAC,GACAA,EAAAe,QAAA,SAAAhB,EAAAiB,GACAH,OAAAC,KAAAf,GAAA1B,OAAA,IACA2B,EAAAgB,GAAAf,EAAAF,MAGAC,GANA,WAUAvB,OAAA,6BAAA,WAEA,MAAA,UAAAwC,GAKA,QAAAhB,GAAAgB,GAkBA,MAhBAd,GAAAC,EAAA,QAAAa,EAAA,UAGAZ,EAAAD,EAAA,sBAAAD,GAGAE,EAAAhC,OAAA,IAGAiC,EAAAD,EACAE,SAAA,yBACAC,KAAA,+DAGAL,EAAAM,KAAA,OAAAC,YAAAJ,IAEAH,EAAAQ,OAtBA,GAAAR,GACAE,EACAC,CAuBA,OAAAW,GACAhB,EAAAgB,GAEAA,MAIAxC,OAAA,iBAAA,aAAA,SAAAhF,GAKA,MAAA,UAAAyH,EAAAC,GAKA,QAAAC,KAEA,MAAA,eAAA3H,EAAA4H,OAAAC,QAAAtD,MAEAuD,QAAA,EACAC,YAAA/H,EAAAgI,aAAAD,aAAA,IAEA/H,EAAA8D,aAAAc,OAAA,GAEA5E,EAAA8D,aAAA9D,EAAA8D,aAAAc,OAAA,GAAAqD,eAAA,gBAAA,aAAAjI,EAAA4H,OAAAC,QAAAtD,MAGAuD,QAAA,EACAC,YAAA/H,EAAA8D,aAAA9D,EAAA8D,aAAAc,OAAA,GAAA,eAAAmD,cASAD,QAAA,GAKA,QAAAI,GAAAC,GACA,GAAAT,EAAA,CACA,GAAAU,GAAAD,EACAE,EAAAV,GACA,IAAAU,EAAAP,UAAA,EAAA,CAEA,GAAApB,GAAAC,EAAA,QAAAwB,EAAA,SACAxB,GAAAD,GAAAgB,UAAAW,EAAAN,aACAK,EAAA1B,EAAAQ,WACA,CAEA,GAAAoB,GAAA3B,EAAA,QAAAwB,EAAA,SACAxB,GAAA2B,GAAAC,kBACAH,EAAAE,EAAApB,YAEA,CAEA,GAAAsB,GAAA7B,EAAA,QAAAwB,EAAA,SACAxB,GAAA6B,GAAAD,kBACAH,EAAAI,EAAAtB,OAGA,MAAAkB,GAGA,MAAAF,GAAAT,OAIAzC,OAAA,gBAAA,UAAA,SAAAlE,GAEA,MAAA,UAAAwF,EAAAC,GACA,QAAAkC,GAAAC,GAOA,MANAA,GAAA9D,OAAA,GACA8D,EAAApB,QAAA,SAAAqB,EAAApB,GACAmB,EAAAnB,GAAAqB,KAAA9H,EAAA,iBAAA6H,EAAAC,MAAA,KAIAF,EAGA,QAAAG,GAAAvC,GAWA,MAVAA,GAAAwC,QAAAhI,EAAA,cAAAwF,EAAAF,WACAE,EAAAyC,SAAAjI,EAAA,eAAAwF,EAAAF,WACAE,EAAA0C,gBAAAlI,EAAA,sBAAAwF,EAAAD,WACAC,EAAA2C,SAAAnI,EAAA,eAAAwF,EAAAD,WACAC,EAAA4C,YAAApI,EAAA,iBAAAwF,EAAA4C,aAAA,GACA5C,EAAA6C,WAAArI,EAAA,iBAAAwF,EAAA6C,YAAA,GACA7C,EAAAG,YAAA3F,EAAA,iBAAAA,EAAA,6BAAAwF,EAAAG,cAAA,GACAH,EAAAa,YAAArG,EAAA,iBAAAA,EAAA,6BAAAwF,EAAAa,cAAA,GACAb,EAAAoC,SAAAD,EAAAnC,EAAAoC,UAEApC,EAGA,MAAAA,GACAc,OAAAC,KAAAf,GAAA1B,OAAA,EACAiE,EAAAvC,GAEAA,EAEAC,GACAA,EAAAe,QAAA,SAAAhB,EAAAiB,GACAH,OAAAC,KAAAf,GAAA1B,OAAA,IACA2B,EAAAgB,GAAAsB,EAAAvC,MAGAC,GANA,WAUAvB,OAAA,sBAAA,UAAA,SAAAlE,GAEA,MAAA,UAAA2F,GAIA,QAAAoC,GAAA1B,GACA,MAAArG,GAAA,iBAAAA,EAAA,6BAAA2F,IAAA,GAGA,MANA2C,SAAAC,IAAA,sBAMA5C,EACAoC,EAAApC,GAGAA,MAIAzB,OAAA,sBAAA,UAAA,SAAAlE,GAEA,MAAA,UAAAqG,GAEA,QAAA0B,GAAA1B,GACA,MAAArG,GAAA,iBAAAA,EAAA,6BAAAqG,IAAA,GAGA,MAAAA,GACA0B,EAAA1B,GAGAA,MAIAnC,OAAA,sBAAA,UAAA,SAAAlE,GAEA,MAAA,UAAA2F,GAEA,QAAAoC,GAAApC,GACA,MAAA3F,GAAA,iBAAAA,EAAA,6BAAA2F,IAAA,GAGA,MAAAA,GACAoC,EAAApC,GAGAA,MAIAzB,OAAA,oBAAA,UAAA,SAAAlE,GAEA,MAAA,UAAAwF,EAAAC,GACA,QAAA+C,GAAAZ,GAOA,MANAA,GAAA9D,OAAA,GACA8D,EAAApB,QAAA,SAAAqB,EAAApB,GACAmB,EAAAnB,GAAAqB,KAAA9H,EAAA,iBAAA6H,EAAAC,MAAA,KAIAF,EAGA,QAAAG,GAAAvC,GAWA,MAVAA,GAAAwC,QAAAhI,EAAA,cAAAwF,EAAAF,WACAE,EAAAyC,SAAAjI,EAAA,eAAAwF,EAAAF,WACAE,EAAA0C,gBAAAlI,EAAA,sBAAAwF,EAAAD,WACAC,EAAA2C,SAAAnI,EAAA,eAAAwF,EAAAD,WACAC,EAAA4C,YAAApI,EAAA,iBAAAwF,EAAA4C,aAAA,GACA5C,EAAA6C,WAAArI,EAAA,iBAAAwF,EAAA6C,YAAA,GACA7C,EAAAG,YAAA3F,EAAA,iBAAAwF,EAAAG,aAAA,GACAH,EAAAa,YAAArG,EAAA,iBAAAwF,EAAAa,aAAA,GACAb,EAAAoC,SAAAY,EAAAhD,EAAAoC,UAEApC,EAGA,MAAAA,GACAc,OAAAC,KAAAf,GAAA1B,OAAA,EACAiE,EAAAvC,GAEAA,EAEAC,GACAA,EAAAe,QAAA,SAAAhB,EAAAiB,GACAH,OAAAC,KAAAf,GAAA1B,OAAA,IACA2B,EAAAgB,GAAAsB,EAAAvC,MAGAC,GANA,WAUAvB,OAAA,wBAAA,UAAA,SAAAlE,GAEA,MAAA,UAAAwF,EAAAC,GAEA,QAAAsC,GAAAvC,GAKA,MAJAA,GAAAwC,QAAAhI,EAAA,cAAAwF,EAAAF,WACAE,EAAAyC,SAAAjI,EAAA,eAAAwF,EAAAF,WACAE,EAAA0C,gBAAAlI,EAAA,sBAAAwF,EAAAD,WACAC,EAAA2C,SAAAnI,EAAA,eAAAwF,EAAAD,WACAC,EAGA,MAAAA,GACAc,OAAAC,KAAAf,GAAA1B,OAAA,EACAiE,EAAAvC,GAEAA,EAEAC,GACAA,EAAAe,QAAA,SAAAhB,EAAAiB,GACAH,OAAAC,KAAAf,GAAA1B,OAAA,IACA2B,EAAAgB,GAAAsB,EAAAvC,MAGAC,GANA,WAUAvB,OAAA,kBAAA,KAAA,OAAA,UAAA,aAAA,SAAAnF,EAAAC,EAAAkB,EAAAhB,GAEA,MAAA,UAAAM,GACA,QAAAiJ,GAAAC,EAAAC,EAAAC,GACA,OACAF,KAAAA,GAAA,GAAA,EACAC,YAAAA,EACAC,IAAAA,GA2CA,MAvCA,QAAApJ,GAAA,gBAAAA,KACAA,EAAAqJ,UACArJ,EAAAqJ,WACA3I,EAAAwC,SAAAC,KAAAnD,EAAAsJ,cAGAtJ,EAAAuJ,QACAvJ,EAAAwJ,MAAAxJ,EAAAoJ,KACA1J,EAAA+J,UAAAzJ,EAAAwJ,KAAAxJ,EAAAoJ,KAIApJ,EAAA0J,QACA1J,EAAAmJ,aAAAnJ,EAAAoJ,KACA1J,EAAAiD,WAAA,kBAAAsG,GAAA,EAAAjJ,EAAAmJ,YAAAnJ,EAAAoJ,MAGApJ,EAAA2J,eACA3J,EAAAmJ,aAAAnJ,EAAAoJ,KACA1J,EAAAiD,WAAA,gBAAAsG,GAAA,EAAAjJ,EAAAmJ,YAAAnJ,EAAAoJ,MAGApJ,EAAA4J,cACA5J,EAAAmJ,aAAAnJ,EAAAoJ,KACA1J,EAAAiD,WAAA,eAAAsG,GAAA,EAAAjJ,EAAAmJ,YAAAnJ,EAAAoJ,MAGApJ,EAAA6J,oBACA7J,EAAAmJ,aAAAnJ,EAAAoJ,KACA1J,EAAAiD,WAAA,qBAAAsG,GAAA,EAAAjJ,EAAAmJ,YAAAnJ,EAAAoJ,MAGApJ,EAAA8J,QACAtK,EAAAuK,KAAA/J,EAAA8J,UAMA,MC9cA1K,QAAAC,OAAA,OACA2K,UAAA,qBAAA,aAAA,SAAAtK,GACA,OACAuK,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GAGA3K,EAAA4K,eAAA,SACA5K,EAAA6K,qBAAA,SAAAC,GACA9K,EAAA4K,eAAAE,QCTAnL,QAAAC,OAAA,OACA2K,UAAA,iBAAA,aAAA,SAAAtK,GACA,OACA8K,YAAA,oDACAP,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA3K,EAAAkK,eACAT,MAAA,EACAC,YAAA,GACAC,IAAA,IAGA1J,EAAAa,IAAA,gBAAA,SAAAkD,EAAAiG,GACAjK,EAAAkK,cAAAD,IAGAhK,EAAAa,IAAA,eAAA,WACAd,EAAAkK,eACAT,MAAA,EACAC,YAAA,GACAC,IAAA,WAMAY,UAAA,mBAAA,aAAA,SAAA,SAAAtK,EAAA+K,GACA,OACAR,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA1K,EAAA+J,UAAA,SAAAiB,EAAApC,GACA,OAAAoC,GACA,IAAA,UACAD,EAAAE,QACAF,EAAA1K,QAAAuI,EACA,MACA,KAAA,UACAmC,EAAAE,QACAF,EAAAG,QAAAtC,EAAA,WACAuC,aAAA,EACAC,cAAA,GAEA,MACA,KAAA,QACAL,EAAAE,QACAF,EAAApK,MAAAiI,EAAA,SACAuC,aAAA,EACAC,cAAA,EACAC,SAAA,GAEA,MACA,SAEAN,EAAAE,UAIAjL,EAAA+E,YAAA,WACAgG,EAAAE,cAKAX,UAAA,iBAAA,aAAA,SAAAtK,GACA,GAAAJ,IAAA,SAAA,aAAA,gBAAA,SAAAG,EAAAC,EAAAsL,GAEAtL,EAAAmD,WAAA,EACAnD,EAAAuL,oBAAA,EACAvL,EAAAwL,0BAAA,SAAAC,GACAzL,EAAAuL,oBAAAE,GAGAzL,EAAAa,IAAA,wBAAA,SAAAkD,EAAAzD,GACAN,EAAAuL,oBAAA,IAAAD,EAAAxD,WAGA9H,EAAAa,IAAA,uBAAA,SAAAkD,EAAAzD,GACAN,EAAAuL,oBAAA,IAAAD,EAAAxD,WAGA9H,EAAAa,IAAA,0BAAA,SAAAkD,EAAAzD,GACAN,EAAAuL,oBAAA,IAAAD,EAAAxD,WAGA9H,EAAA0L,cAAA,WACA1L,EAAAmD,WAAA,GAEAnD,EAAA2L,eAAA,WACA3L,EAAAmD,WAAA,GAGAnD,EAAAa,IAAA,gBAAA,WACAb,EAAAmD,WAAA,IAGAnD,EAAAa,IAAA,iBAAA,WACAb,EAAAmD,WAAA,KAIA,QACA2H,YAAA,mDACAP,SAAA,KACA3K,WAAAA,MAGA0K,UAAA,qBAAA,aAAA,SAAAtK,GACA,OACAuK,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA3K,EAAAmK,cACAV,MAAA,EACAC,YAAA,GACAC,IAAA,IAGA1J,EAAAa,IAAA,eAAA,SAAAkD,EAAAiG,GACAjK,EAAAmK,aAAAF,IAGAhK,EAAAa,IAAA,eAAA,WACAd,EAAAmK,cACAV,MAAA,EACAC,YAAA,GACAC,IAAA,WAMAY,UAAA,2BAAA,aAAA,SAAAtK,GACA,OACAuK,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA3K,EAAAoK,oBACAX,MAAA,EACAC,YAAA,GACAC,IAAA,IAGA1J,EAAAa,IAAA,qBAAA,SAAAkD,EAAAiG,GACAjK,EAAAoK,mBAAAH,IAGAhK,EAAAa,IAAA,eAAA,WACAd,EAAAoK,oBACAX,MAAA,EACAC,YAAA,GACAC,IAAA,WCpJAhK,QAAAC,OAAA,OACA2K,UAAA,kBAAA,aAAA,QAAA,SAAAtK,EAAA4L,GACA,OACArB,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GAOA,QAAAmB,GAAAtH,EAAAuH,EAAAC,GACA,GAAAC,GAAA,CAEA,OAAAzH,IAAA,GAAAA,EAAAK,OAIAkH,GAAA,GAAAA,EAAAlH,OAIAmH,GAAA,GAAAA,EAAAnH,OAIA,GAAAoH,EACA,EADA,UAHAA,EACAhM,EAAA+J,UAAA,UAAA,0BACA,OANAiC,EACAhM,EAAA+J,UAAA,UAAA,8BACA,OANAiC,EACAhM,EAAA+J,UAAA,UAAA,0BACA,IA8BA,QAAAkC,GAAAC,GACA,MAAAN,GAAAtF,KAAA,aAAA4F,GA3CAnM,EAAAmM,gBACA3H,KAAA,GACAuH,MAAA,GACAC,QAAA,IAuBAhM,EAAAkM,cAAA,WACA,GAAAE,GAAAN,EAAA9L,EAAAmM,eAAA3H,KAAAxE,EAAAmM,eAAAJ,MAAA/L,EAAAmM,eAAAH,QACA,IAAAI,GACAF,EAAAlM,EAAAmM,gBACA7L,QAAA,SAAAC,GACAP,EAAAmM,eAAA3H,KAAA,GACAxE,EAAAmM,eAAAJ,MAAA,GACA/L,EAAAmM,eAAAH,QAAA,GACA/L,EAAAO,KAAAC,sBAAAF,KAEAK,MAAA,SAAAC,GACAZ,EAAAO,KAAAC,sBAAAI,WAWA0J,UAAA,aAAA,WACA,OACAQ,YAAA,gDACAP,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,SCzDAhL,QAAAC,OAAA,OACA2K,UAAA,sBAAA,aAAA,QAAA,SAAAtK,EAAA4L,GACA,OACArB,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GAyBA,QAAA0B,GAAAC,GACA,MAAAT,GAAAtF,KAAA,iBAAA+F,GAzBAtM,EAAAuM,qBACAR,MAAA,GACAS,UAAA,GACAC,SAAA,GACAC,SAAA,GACAC,UAAA,GACAC,UAAA,GACAC,eAAA,IAGA7M,EAAAqM,cAAA,WACAA,EAAArM,EAAAuM,qBACAjM,QAAA,SAAAC,GAEAN,EAAAO,KAAAC,sBAAAF,KAEAK,MAAA,SAAAkB,GACA9B,EAAAuM,oBAAAI,UAAA,GACA3M,EAAAuM,oBAAAK,UAAA,GACA5M,EAAAuM,oBAAAM,eAAA,GACA5M,EAAAO,KAAAC,sBAAAqB,WCzBAnC,QAAAC,OAAA,OACA2K,UAAA,cAAA,WACA,OACAQ,YAAA,iDACAP,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,SCLAhL,QAAAC,OAAA,OACA2K,UAAA,eAAA,aAAA,QAAA,SAAAtK,EAAA4L,GACA,OACArB,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GAWA,QAAAmC,KACA,MAAAjB,GAAAtF,KAAA,qBAXAvG,EAAA8M,aAAA,WACAA,IACAxM,QAAA,SAAAC,GACAN,EAAAO,KAAAC,sBAAAF,KAEAK,MAAA,SAAAkB,GACA7B,EAAAO,KAAAC,sBAAAqB,WCXAnC,QAAAC,OAAA,OACA2K,UAAA,eAAA,UAAA,SAAAxJ,GACA,OACAgK,YAAA,iDACAgC,OACA3F,YAAA,UAEAoD,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA3K,EAAAoH,YAAArG,EAAA,sBAAAf,EAAAoH,kBAIAmD,UAAA,eAAA,UAAA,SAAAxJ,GACA,OACAgK,YAAA,iDACAgC,OACArG,YAAA,UAEA8D,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA3K,EAAA0G,YAAA3F,EAAA,sBAAAf,EAAA0G,kBAIA6D,UAAA,YAAA,UAAA,SAAAxJ,GACA,OACAgK,YAAA,8CACAgC,OACApE,SAAA,UAEA6B,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,SChCAhL,QAAAC,OAAA,OACA2K,UAAA,oBAAA,aAAA,QAAA,SAAAtK,EAAA4L,GACA,OACArB,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GAaA,QAAAqC,GAAAC,GACA,MAAApB,GAAAtF,KAAA,4BACA0G,eAAAA,IAbAjN,EAAAgN,wBAAA,SAAAC,GACA5D,QAAAC,IAAA2D,GACAD,EAAAC,GACA3M,QAAA,SAAAC,GACAN,EAAAO,KAAAC,sBAAAF,KAEAK,MAAA,SAAAsM,GACAjN,EAAAO,KAAAC,sBAAAyM,WCbAvN,QAAAC,OAAA,OACA2K,UAAA,eAAA,aAAA,QAAA,SAAAtK,EAAA4L,GACA,OACArB,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GAkBA,QAAAwC,GAAAC,GACA,MAAAvB,GAAAtF,KAAA,kBAAA6G,GAlBApN,EAAAqN,gBACAX,SAAA,GACAY,SAAA,IAGAtN,EAAAuN,qBAAA,WACAJ,EAAAnN,EAAAqN,gBACA/M,QAAA,SAAAC,GAEAN,EAAAO,KAAAC,sBAAAF,KAEAK,MAAA,SAAAkB,GACA9B,EAAAqN,eAAAC,SAAA,GACArN,EAAAO,KAAAC,sBAAAqB,WClBAnC,QAAAC,OAAA,OACA2K,UAAA,kBAAA,aAAA,UAAA,QAAA,SAAAtK,EAAAc,EAAA8K,GACA,OACAd,YAAA,oDACAP,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GAMA,QAAA6C,KACAC,IACAnN,QAAA,SAAAC,GACAA,EAAAmN,WAAA7I,OAAA,GACA8I,EAAApN,EAAAmN,YAIAzN,EAAAO,KAAAC,sBAAAF,KAGAK,MAAA,SAAAC,GACAZ,EAAAO,KAAAC,sBAAAI,KAMA,QAAA4M,KACA,MAAA5B,GAAAtF,KAAA,6BAGA,QAAAoH,GAAAC,GAEA5N,EAAA6N,eADAD,SAGA7M,EAAA,wBAAA,KAAA6M,GA/BA3N,EAAAO,KAAAoC,UAEA5C,EAAA6N,kBACA7N,EAAA8N,oBAAA,EAkBAN,SC3BA7N,QAAAC,OAAA,OACA2K,UAAA,kBAAA,UAAA,SAAApK,GACA,OACA4N,SAAA,yCACAvD,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA3K,EAAAgO,aAAA7N,EAAA8N,mBACAjO,EAAAkO,OAAA/N,EAAA8N,iBAAA,WACAjO,EAAAgO,aAAA7N,EAAA8N,0BCRAtO,QAAAC,OAAA,OACA2K,UAAA,2BAAA,UAAA,YAAA,aAAA,UAAA,SAAAtJ,EAAAC,EAAAjB,EAAAE,GACA,OACAqK,SAAA,KACAC,KAAA,SAAAzK,EAAA0K,EAAAC,GACA3K,EAAAmO,iBACAnG,YAAA,GACAoG,cAAA,GAGApO,EAAAqO,kBAAA,WACArO,EAAAmO,gBAAAnG,YAAAnD,OAAA,GACA5E,EAAAO,KAAA+C,eAAA,iBAAAvD,EAAAmO,gBAAAnG,YAAA,IAAAhI,EAAAmO,gBAAAC,qBCZAzO,QAAAC,OAAA,OAEA0O,QAAA,MAAA,KAAA,YAAA,UAAA,aAAA,gBACA,SAAAxO,EAAAoB,EAAAD,EAAAhB,EAAAmB,GACA,OACAmN,iBAAA,SAAAC,GACA,GAAAC,GAAA,CACA,KAAA,GAAAC,KAAAF,GACAA,EAAAtG,eAAAwG,IACAD,GAGA,OAAAA,QCZA9O,QAAAC,OAAA,OACA0O,QAAA,WAAA,KAAA,YAAA,aACA,SAAAxO,EAAAoB,EAAAjB,GACA,GAAAuB,MACAQ,GACA2M,cAAA,qEACA5M,aAAAb,EAAA0N,OAAA,UAAA1N,EAAAkB,OAAA,IAAAlB,EAAA0N,OAAA,SAAA5O,OAAA+B,aAAA,UAAAb,EAAAkB,OAAA,SAGA,QAEAZ,SAAA,SAAAqN,GACA,MAAAA,GACArN,EAAAqN,EAGArN,GAIAQ,QAAAA,EAEAiM,iBAAA,WACA,MAAAjM,GAAA2M,eAGAG,qBAAA,WACA9M,EAAA2M,cAAA,sEAGAI,oBAAA,SAAAC,GAIA,MAHAA,KACAhN,EAAA2M,cAAAK,GAEAhN,EAAA2M,eAGAzM,gBAAA,WACA,MAAA,KAAAa,SAAAU,SAAAwL,SAAA5M,OAAA,aACA,sBAEAnB,EAAA0N,OACA,oBAAA1N,EAAA0N,OAEA,oBAKAM,mBAAA,WACA,QAAAC,GAAA3N,GACA,MAAAA,IAAA6F,OAAAC,KAAA9F,GAAA,EACAA,EAAAE,aACAF,EAAA4N,iBAQA5N,EAAA6N,cAAA,GAEA5F,MAAA,EACAC,YAAA,sBACAC,IAAA,yKACA2F,iBAAA,EACAC,eAAA,GAEA/N,EAAAgO,UACAhO,EAAAgO,SAAAzH,UAAA,GAGA0B,MAAA,EACAC,YAAA,sBACAC,IAAA,kGACA2F,iBAAA,EACAC,eAAA,IAaA9F,MAAA,EACAC,YAAA,GACAC,IAAA,GACA2F,iBAAA,EACAC,eAAA,IAvCA9F,MAAA,EACAC,YAAA,sBACAC,IAAA,0HACA2F,iBAAA,EACAC,eAAA,IAuCAlG,QAAAC,IAAA9H,IAEAiI,MAAA,EACAC,YAAA,sBACAC,IAAA,uEACA2F,iBAAA,EACAC,eAAA,KAMA9F,MAAA,EACAC,YAAA,GACAC,IAAA,GACA2F,iBAAA,EACAC,eAAA,GAKA,GAAAE,GAAAN,EAAA3N,EAEA,OADAvB,GAAAiD,WAAA,kBAAAuM,GACAA,EAAAF,mBCzHA5P,QAAAC,OAAA,OACA0O,QAAA,eAAA,OAAA,UAAA,aAAA,SACA,SAAAvO,EAAAkB,EAAAhB,EAAAkB,GAOA,MALAA,GAAAuO,GAAA,YAAA,WACA3P,EAAA4P,KAAA,kCACA1P,EAAAiD,WAAA,gBAIA0M,KAAA,WACA,MAAA,QCXAjQ,QAAAC,OAAA,OACA0O,QAAA,yBAAA,UAAA,OAAA,QAAA,UAAA,aAAA,SACA,SAAAvN,EAAAhB,EAAA8L,EAAA5K,EAAAhB,EAAAkB,GAEA,GAAAT,KAEA,QAEAN,kBAAA,WACA,MAAAM,IAGAL,4BAAA,WACA,MAAAwL,GAAAtF,KAAA,8BAGA5F,qBAAA,SAAAkP,GAMA,MAJAnP,GADAmP,SAGA9O,EAAA,wBAAA,KAAA8O,GAEAA,OCtBAlQ,QAAAC,OAAA,OACA0O,QAAA,UAAA,OAAA,YAAA,aACA,SAAAvO,EAAAmB,EAAAjB,GACA,GAAA6P,EAGAA,GADA,KAAA/M,SAAAU,SAAAwL,SAAA5M,OAAA,aACA,sBAEAnB,EAAA0N,OACA,oBAAA1N,EAAA0N,OAEA,kBAIA,IAAAzN,GAAA4O,GAAAC,QAAAF,EAEA,QACAJ,GAAA,SAAAO,EAAAC,GACA/O,EAAAuO,GAAAO,EAAA,WACA,GAAAE,GAAAC,SACAnQ,GAAAoQ,OAAA,WACAH,EAAAI,MAAAnP,EAAAgP,QAKAxO,KAAA,SAAAsO,EAAApB,EAAAqB,GACA/O,EAAAQ,KAAAsO,EAAApB,EAAA,WACA,GAAAsB,GAAAC,SACAnQ,GAAAoQ,OAAA,WACAH,GACAA,EAAAI,MAAAnP,EAAAgP,QAMAI,mBAAA,SAAAN,EAAAC,GACA/O,EAAAoP,mBAAAN,EAAA,WACA,GAAAE,GAAAC,SACAnQ,GAAAoQ,OAAA,WACAH,EAAAI,MAAAnP,EAAAgP,YASA7B,QAAA,iBAAA,OAAA,QAAA,aACA,SAAAvO,EAAA8L,EAAA5L,GAEA,OAEAsB,YAAA,WACA,MAAAsK,GAAA2E,IAAA,qBAGAnE,cAAA,SAAAC,GACA,MAAAT,GAAAtF,KAAA,iBAAA+F,IAGAa,eAAA,SAAAC,GACA,MAAAvB,GAAAtF,KAAA,kBAAA6G,IAGAJ,wBAAA,SAAAC,GACA,MAAApB,GAAAtF,KAAA,4BACA0G,eAAAA,KAIAf,cAAA,SAAAC,GACA,MAAAN,GAAAtF,KAAA,aAAA4F,QAMAmC,QAAA,iBAAA,QACA,SAAAzC,GACA,OAEAiB,aAAA,WACA,MAAAjB,GAAAtF,KAAA,0BCtFA5G,QAAAC,OAAA,OACA6Q,KAAA,iBAAA,QAAA,aAAA,SAAA,eAAA,SAAAC,EAAA7E,EAAA5L,EAAA4H,EAAAI,GACAhI,EAAA4H,OAAAA,EACA5H,EAAAgI,aAAAA,EACAhI,EAAA0Q,OACArJ,KAAAD,OAAAC,SAIAsJ,QAAA,iBAAA,qBAAA,oBAAA,SAAAC,EAAAC,EAAAC,OAsCAC,MAAA,iBAAA,IC/CArR,QAAAC,OAAA,OACAC,WAAA,kBAAA,KAAA,UAAA,OAAA,YAAA,UAAA,YAAA,SAAA,aAAA,SAAA,cAAA,gBAAA,UACA,SAAAC,EAAAiB,EAAAhB,EAAAiB,EAAAC,EAAAC,EAAAlB,EAAAC,EAAAkB,EAAA8P,EAAA7P,EAAAjB,GAGAH,EAAAkP,mBAAA,SAAA1N,GACA,MAAAA,IACAA,EAAAE,aACA,GAAAF,EAAA4N,kBACA,EAEA5N,EAAA6N,cAAA,GACA,EACA7N,EAAAgO,UACAhO,EAAAgO,SAAAzH,UAAA,GAEA,GAKA,GAOA,GAKA/H,EAAAkR,qBAAA,EAEAjR,EAAAa,IAAA,kBAAA,WACAd,EAAAkR,oBAAAlR,EAAAkP,mBAAA/O,EAAAqB","file":"concatenated.min.js","sourcesContent":["//angular sanitize included in textAngular\nangular.module('app', [\n    'ui.bootstrap',\n    'cfp.loadingBar',\n    'angulartics',\n    'angulartics.google.analytics',\n    'angularMoment',\n    'ui.router',\n    'duScroll',\n    'ngFx',\n    'textAngular',\n    'angularUtils.directives.dirDisqus',\n    'ngTagsInput',\n    'ui.utils',\n    'ngFileUpload',\n    'toastr'\n]);","angular.module('app')\n    .controller('PopularStoriesController', ['$q', '$log', '$scope', '$rootScope', 'PopularStoriesService', 'globals',\n        function ($q, $log, $scope, $rootScope, PopularStoriesService, globals) {\n\n            $scope.popularStories = PopularStoriesService.getPopularStories();\n\n            function getPopularStories() {\n                PopularStoriesService.getPopularStoriesFromServer()\n                    .success(function (resp) {\n                        $rootScope.main.responseStatusHandler(resp);\n                        $scope.popularStories = PopularStoriesService.updatePopularStories(resp.popularStories);\n                    })\n                    .error(function (errResp) {\n                        $scope.popularStories = PopularStoriesService.updatePopularStories([]);\n                        $rootScope.main.responseStatusHandler(errResp);\n                    });\n            }\n\n            getPopularStories();\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnect', function () {\n                getPopularStories();\n            });\n        }\n    ]);","angular.module('app')\n    .controller('UniversalController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'socketService', 'globals', '$document',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, socketService, globals, $document) {\n\n            //index page url\n            $scope.indexPageUrl = globals.allData.indexPageUrl;\n\n            //website host\n            $rootScope.currentHost = globals.getLocationHost();\n\n            //disqus\n            $scope.showDisqus = $location.host().search(\"negusmath\") !== -1;\n\n            //scrolling functions\n            var duration = 0; //milliseconds\n            var offset = 40; //pixels; adjust for floating menu, context etc\n            //Scroll to #some-id with 30 px \"padding\"\n            //Note: Use this in a directive, not with document.getElementById\n\n            $rootScope.main = {\n                currentTime: \"\",\n\n                showLoadingBannerDir: false,\n\n                showLoadingBanner: function () {\n                    this.showLoadingBannerDir = true;\n                },\n\n                hideLoadingBanner: function () {\n                    this.showLoadingBannerDir = false;\n                },\n\n                goToTop: function () {\n                    var someElement = angular.element(document.getElementById('top'));\n                    $document.scrollToElement(someElement, 80, duration);\n                },\n\n                broadcastUserData: function () {\n                    $rootScope.$broadcast('userDataChanges');\n                },\n\n                responseStatusHandler: function (resp) {\n                    $filter('responseFilter')(resp);\n                },\n\n                clearBanners: function () {\n                    $rootScope.$broadcast('clearBanners');\n                },\n\n                isLoading: true,\n\n                startLoading: function () {\n                    this.isLoading = true;\n                },\n\n                finishedLoading: function () {\n                    $rootScope.isLoading = false;\n                },\n\n                redirectToPage: function (pathWithFirstSlash) {\n                    $window.location.href = globals.getLocationHost() + pathWithFirstSlash;\n                }\n\n            };\n\n            //=====================time functions=======================\n            //set current Date\n            $scope.currentTime = moment().format(\"ddd, MMM D, H:mm\");\n            var updateCurrentTime = function () {\n                $scope.currentTime = moment().format(\"ddd, MMM D, H:mm\");\n            };\n            $interval(updateCurrentTime, 20000, 0, true);\n\n            //======================end time functions===================\n\n            //initial requests\n            function initialRequests() {\n                socketService.getUserData()\n                    .success(function (resp) {\n                        $rootScope.main.responseStatusHandler(resp);\n                        $scope.userData = globals.userData(resp.userData);\n                        $rootScope.main.broadcastUserData();\n\n                        if ($scope.userData.isRegistered) {\n                            //join a socketRoom for websocket connection, equivalent to user's uniqueCuid\n                            socket.emit('joinRoom', {\n                                room: resp.userData.uniqueCuid\n                            });\n                        }\n                    })\n                    .error(function (errResponse) {\n                        $rootScope.main.responseStatusHandler(errResponse);\n                    });\n            }\n\n            initialRequests();\n\n            //$scope functions to be used in other controllers and directives\n            //back navigation functionality\n            var history = [];\n            $rootScope.stateHistory = [];\n            $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n                history.push($location.$$path);\n                //push the previous state also\n                var temp = {};\n                temp[fromState.name] = fromParams;\n                $rootScope.stateHistory.push(temp);\n            });\n\n            $rootScope.back = function () {\n                window.history.back();\n            };\n\n            $rootScope.backAngular = function () {\n                var prevUrl = history.length > 1 ? history.splice(-2)[0] : \"/\";\n                $location.path(prevUrl);\n            };\n\n            $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n                $rootScope.main.clearBanners();\n                $rootScope.clearToasts();\n            });\n\n            //notification banner\n            //$rootScope.showNotfBanner = function (type, text) {\n            //    console.log(type + ' ' + text);\n            //    switch (type) {\n            //        case \"success\":\n            //            notifications.showSuccess({\n            //                message: text\n            //            });\n            //            break;\n            //        case \"warning\":\n            //            notifications.showWarning({\n            //                message: text\n            //            });\n            //            break;\n            //        case \"error\":\n            //            notifications.showError({\n            //                message: text\n            //            });\n            //            break;\n            //        default:\n            //        //clears current list of toasts\n            //        //do nothing\n            //    }\n            //};\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnect', function () {\n                initialRequests();\n            });\n        }\n    ]);","angular.module('app')\n    .filter(\"timeago\", [function () {\n        //time: the time\n        //local: compared to what time? default: now\n        //raw: whether you want in a format of \"5 minutes ago\", or \"5 minutes\"\n        return function (time, local, raw) {\n            if (!time) return \"never\";\n\n            if (!local) {\n                (local = Date.now())\n            }\n\n            if (angular.isDate(time)) {\n                time = time.getTime();\n            } else if (typeof time === \"string\") {\n                time = new Date(time).getTime();\n            }\n\n            if (angular.isDate(local)) {\n                local = local.getTime();\n            } else if (typeof local === \"string\") {\n                local = new Date(local).getTime();\n            }\n\n            if (typeof time !== 'number' || typeof local !== 'number') {\n                return;\n            }\n\n            var\n                offset = Math.abs((local - time) / 1000),\n                span = [],\n                MINUTE = 60,\n                HOUR = 3600,\n                DAY = 86400,\n                WEEK = 604800,\n                MONTH = 2629744,\n                YEAR = 31556926,\n                DECADE = 315569260;\n\n            if (offset <= MINUTE)              span = ['', raw ? 'now' : 'less than a minute'];\n            else if (offset < (MINUTE * 60))   span = [Math.round(Math.abs(offset / MINUTE)), 'min'];\n            else if (offset < (HOUR * 24))     span = [Math.round(Math.abs(offset / HOUR)), 'hr'];\n            else if (offset < (DAY * 7))       span = [Math.round(Math.abs(offset / DAY)), 'day'];\n            else if (offset < (WEEK * 52))     span = [Math.round(Math.abs(offset / WEEK)), 'week'];\n            else if (offset < (YEAR * 10))     span = [Math.round(Math.abs(offset / YEAR)), 'year'];\n            else if (offset < (DECADE * 100))  span = [Math.round(Math.abs(offset / DECADE)), 'decade'];\n            else                               span = ['', 'a long time'];\n\n            span[1] += (span[0] === 0 || span[0] > 1) ? 's' : '';\n            span = span.join(' ');\n\n            if (raw === true) {\n                return span;\n            }\n            return (time <= local) ? span + ' ago' : 'in ' + span;\n        }\n    }])\n    .filter(\"getTimeAgo\", ['$filter', function ($filter) {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return $filter('timeago')(createdAt);\n        }\n    }])\n    .filter(\"getPostDate\", [function () {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return moment(createdAt).format(\"ddd, MMM D, H:mm\");\n        }\n    }])\n    .filter(\"getPostAbsoluteUrl\", [function () {\n        return function (postIndex) {\n            return 'http://www.negusmath.com/#!/home/post/' + postIndex;\n        }\n    }])\n    .filter(\"getPostPath\", [function () {\n        return function (postIndex) {\n            return '/#!/home/post/' + postIndex;\n        }\n    }])\n    .filter(\"makeVideoIframesResponsive\", [function () {\n        //making embedded videos responsive\n        return function (post, posts) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(post) {\n                if (post.postSummary) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postSummary + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postSummary = theElement.html();\n\n                }\n                if (post.postContent) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postContent + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postContent = theElement.html();\n                }\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return makeResp(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = makeResp(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"getVideoResponsiveVersion\", [function () {\n        //making embedded videos responsive\n        return function (textString) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(textString) {\n                //convert the element to string\n                theElement = $(\"<div>\" + textString + \"</div>\");\n\n                //find the video iframe elements\n                imgElement = $('img.ta-insert-video', theElement);\n\n                //only perform operation if there are iframes available\n                if (imgElement.length > 0) {\n\n                    //add class and wrap in div\n                    imgWrappedInDiv = imgElement\n                        .addClass('embed-responsive-item')\n                        .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                    //replace in original\n                    theElement.find('img').replaceWith(imgWrappedInDiv);\n                }\n                return theElement.html();\n            }\n\n            if (textString) {\n                return makeResp(textString)\n            } else {\n                return textString;\n            }\n        }\n    }])\n    .filter(\"highlightText\", ['$rootScope', function ($rootScope) {\n        //making embedded videos responsive\n        //the highlight variable should be a boolean to make the function\n        //know if to highlight or not\n        //if false then the function will remove highlight\n        return function (theElementString, highlight) {\n            //text is highlighted only if the present or previous state was search\n            //this fn checks if the present or previous state was search, and returns an object with status false if not\n            //if true, the returned object carries the queryString with it\n\n            function checkSearchState() {\n                //check latest state\n                if ($rootScope.$state.current.name == 'home.search') {\n                    return {\n                        status: true,\n                        queryString: $rootScope.$stateParams.queryString || \"\"\n                    }\n                } else if ($rootScope.stateHistory.length > 0) {\n                    //check if previous state was search and current state is post\n                    if ($rootScope.stateHistory[$rootScope.stateHistory.length - 1].hasOwnProperty('home.search') && $rootScope.$state.current.name == 'home.post') {\n                        //checking the previous state\n                        return {\n                            status: true,\n                            queryString: $rootScope.stateHistory[$rootScope.stateHistory.length - 1]['home.search'].queryString\n                        }\n                    } else {\n                        return {\n                            status: false\n                        }\n                    }\n                } else {\n                    return {\n                        status: false\n                    }\n                }\n            }\n\n            function highLightThisText(textToHighlight) {\n                if (highlight) {\n                    var finalString = textToHighlight;\n                    var highlightDetails = checkSearchState();\n                    if (highlightDetails.status === true) {\n                        //highlight\n                        var theElement = $(\"<div>\" + textToHighlight + \"</div>\");\n                        $(theElement).highlight(highlightDetails.queryString);\n                        finalString = theElement.html();\n                    } else {\n                        //remove highlight\n                        var theElement2 = $(\"<div>\" + textToHighlight + \"</div>\");\n                        $(theElement2).removeHighlight();\n                        finalString = theElement2.html();\n                    }\n                } else {\n                    //remove highlight\n                    var theElement3 = $(\"<div>\" + textToHighlight + \"</div>\");\n                    $(theElement3).removeHighlight();\n                    finalString = theElement3.html();\n                }\n\n                return finalString;\n            }\n\n            return highLightThisText(theElementString);\n\n        }\n    }])\n    .filter(\"preparePosts\", ['$filter', function ($filter) {\n        //making embedded videos responsive\n        return function (post, posts) {\n            function highlightPostTags(postTags) {\n                if (postTags.length > 0) {\n                    postTags.forEach(function (tag, index) {\n                        postTags[index].text = $filter('highlightText')(tag.text, true);\n                    });\n                }\n\n                return postTags;\n            }\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                post.postHeading = $filter('highlightText')(post.postHeading, true);\n                post.authorName = $filter('highlightText')(post.authorName, true);\n                post.postSummary = $filter('highlightText')($filter('getVideoResponsiveVersion')(post.postSummary), true);\n                post.postContent = $filter('highlightText')($filter('getVideoResponsiveVersion')(post.postContent), true);\n                post.postTags = highlightPostTags(post.postTags);\n\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"preparePostSummary\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postSummary) {\n\n            console.log(\"postSummary called\");\n\n            function prepare(postContent) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postSummary), true);\n            }\n\n            if (postSummary) {\n                return prepare(postSummary);\n            } else {\n\n                return postSummary;\n            }\n        }\n    }])\n    .filter(\"preparePostContent\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postContent) {\n\n            function prepare(postContent) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postContent), true);\n            }\n\n            if (postContent) {\n                return prepare(postContent);\n            } else {\n\n                return postContent;\n            }\n        }\n    }])\n    .filter(\"preparePostSummary\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postSummary) {\n\n            function prepare(postSummary) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postSummary), true);\n            }\n\n            if (postSummary) {\n                return prepare(postSummary);\n            } else {\n\n                return postSummary;\n            }\n        }\n    }])\n    .filter(\"removeHighlights\", ['$filter', function ($filter) {\n        //making embedded videos responsive\n        return function (post, posts) {\n            function removePostTagsHighlight(postTags) {\n                if (postTags.length > 0) {\n                    postTags.forEach(function (tag, index) {\n                        postTags[index].text = $filter('highlightText')(tag.text, false);\n                    });\n                }\n\n                return postTags;\n            }\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                post.postHeading = $filter('highlightText')(post.postHeading, false);\n                post.authorName = $filter('highlightText')(post.authorName, false);\n                post.postSummary = $filter('highlightText')(post.postSummary, false);\n                post.postContent = $filter('highlightText')(post.postContent, false);\n                post.postTags = removePostTagsHighlight(post.postTags);\n\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"preparePostsNoChange\", ['$filter', function ($filter) {\n        //does not change the post to make it responsive and does not highlight\n        return function (post, posts) {\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"responseFilter\", ['$q', '$log', '$window', '$rootScope', function ($q, $log, $window, $rootScope) {\n        //making embedded videos responsive\n        return function (resp) {\n            function makeBanner(show, bannerClass, msg) {\n                return {\n                    show: show ? true : false,\n                    bannerClass: bannerClass,\n                    msg: msg\n                }\n            }\n\n            if (resp !== null && typeof resp === 'object') {\n                if (resp.redirect) {\n                    if (resp.redirect) {\n                        $window.location.href = resp.redirectPage;\n                    }\n                }\n                if (resp.notify) {\n                    if (resp.type && resp.msg) {\n                        $rootScope.showToast(resp.type, resp.msg);\n                        //$rootScope.showNotfBanner(resp.type, resp.msg);\n                    }\n                }\n                if (resp.banner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('universalBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.newPostBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('newPostBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.signInBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('signInBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.registrationBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('registrationBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.reason) {\n                    $log.warn(resp.reason);\n                }\n            } else {\n                //do nothing\n            }\n\n            return true;\n        }\n    }]);","angular.module('app')\n    .directive('accountOuterScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //variable to hold state between local login and creating a new account\n                //values =  signIn, register\n                $scope.userLoginState = 'signIn';\n                $scope.changeUserLoginState = function (newState) {\n                    $scope.userLoginState = newState;\n                };\n            }\n        }\n    }]);","angular.module('app')\n    .directive('newPostBanner', ['$rootScope', function ($rootScope) {\n        return {\n            templateUrl: 'views/all/partials/templates/new_post_banner.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.newPostBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('newPostBanner', function (event, banner) {\n                    $scope.newPostBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.newPostBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('toastrDirective', ['$rootScope', 'toastr', function ($rootScope, toastr) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $rootScope.showToast = function (toastType, text) {\n                    switch (toastType) {\n                        case \"success\":\n                            toastr.clear();\n                            toastr.success(text);\n                            break;\n                        case \"warning\":\n                            toastr.clear();\n                            toastr.warning(text, 'Warning', {\n                                closeButton: true,\n                                tapToDismiss: true\n                            });\n                            break;\n                        case \"error\":\n                            toastr.clear();\n                            toastr.error(text, 'Error', {\n                                closeButton: true,\n                                tapToDismiss: true,\n                                timeOut: false\n                            });\n                            break;\n                        default:\n                            //clears current list of toasts\n                            toastr.clear();\n                    }\n                };\n\n                $rootScope.clearToasts = function () {\n                    toastr.clear();\n                };\n            }\n        }\n    }])\n    .directive('loadingBanner', ['$rootScope', function ($rootScope) {\n        var controller = ['$scope', '$rootScope', 'cfpLoadingBar', function ($scope, $rootScope, cfpLoadingBar) {\n\n            $rootScope.isLoading = true;\n            $rootScope.isLoadingPercentage = 0;\n            $rootScope.changeIsLoadingPercentage = function (num) {\n                $rootScope.isLoadingPercentage = num;\n            };\n\n            $rootScope.$on('cfpLoadingBar:loading', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:loaded', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:completed', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.isLoadingTrue = function () {\n                $rootScope.isLoading = true;\n            };\n            $rootScope.isLoadingFalse = function () {\n                $rootScope.isLoading = false;\n            };\n\n            $rootScope.$on('isLoadingTrue', function () {\n                $rootScope.isLoading = true;\n            });\n\n            $rootScope.$on('isLoadingFalse', function () {\n                $rootScope.isLoading = false;\n            });\n        }];\n\n        return {\n            templateUrl: 'views/all/partials/templates/loading_banner.html',\n            restrict: 'AE',\n            controller: controller\n        }\n    }])\n    .directive('signInBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.signInBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('signInBanner', function (event, banner) {\n                    $scope.signInBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.signInBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('registrationBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('registrationBanner', function (event, banner) {\n                    $scope.registrationBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.registrationBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }]);","angular.module('app')\n    .directive('contactUsScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.contactUsModel = {\n                    name: \"\",\n                    email: \"\",\n                    message: \"\"\n                };\n\n                function validateContactUs(name, email, message) {\n                    var errors = 0;\n\n                    if (!name || name.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter your name\");\n                        return -1\n                    } else if (!email || email.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter a valid email\");\n                        return -1\n                    } else if (!message || message.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Message field is empty\");\n                        return -1;\n                    } else if (errors == 0) {\n                        return 1;\n                    }\n                }\n\n                $scope.sendContactUs = function () {\n                    var formStatus = validateContactUs($scope.contactUsModel.name, $scope.contactUsModel.email, $scope.contactUsModel.message);\n                    if (formStatus == 1) {\n                        sendContactUs($scope.contactUsModel)\n                            .success(function (resp) {\n                                $scope.contactUsModel.name = \"\";\n                                $scope.contactUsModel.email = \"\";\n                                $scope.contactUsModel.message = \"\";\n                                $rootScope.main.responseStatusHandler(resp);\n                            })\n                            .error(function (errResp) {\n                                $rootScope.main.responseStatusHandler(errResp);\n                            });\n                    }\n                };\n\n                function sendContactUs(contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    }])\n    .directive('contactUs', [function () {\n        return {\n            templateUrl: 'views/all/partials/components/contact_us.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //depends on contactUsScope\n            }\n        }\n    }]);","angular.module('app')\n    .directive('createAccountScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\",\n                    invitationCode: \"\"\n                };\n\n                $scope.createAccount = function () {\n                    createAccount($scope.registrationDetails)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            $scope.registrationDetails.invitationCode = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function createAccount(details) {\n                    return $http.post('/createAccount', details);\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('mainFooter', [function () {\n        return {\n            templateUrl: 'views/all/partials/components/main_footer.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n            }\n        }\n    }]);","angular.module('app')\n    .directive('logoutScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.logoutClient = function () {\n                    logoutClient()\n                        .success(function (resp) {\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function logoutClient() {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('postContent', ['$filter', function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_content.html',\n            scope: {\n                postContent: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.postContent = $filter('preparePostContent')($scope.postContent);\n            }\n        }\n    }])\n    .directive('postSummary', ['$filter',function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_summary.html',\n            scope: {\n                postSummary: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.postSummary = $filter('preparePostSummary')($scope.postSummary);\n            }\n        }\n    }])\n    .directive('postTags', ['$filter',function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_tags.html',\n            scope: {\n                postTags: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n            }\n        }\n    }]);","angular.module('app')\n    .directive('resendEmailScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.resendConfirmationEmail = function (userUniqueCuid) {\n                    console.log(userUniqueCuid);\n                    resendConfirmationEmail(userUniqueCuid)\n                        .success(function (resp) {\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (err) {\n                            $rootScope.main.responseStatusHandler(err);\n                        })\n                };\n\n                function resendConfirmationEmail(userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('signInScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\"\n                };\n\n                $scope.submitLocalLoginForm = function () {\n                    localUserLogin($scope.loginFormModel)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function localUserLogin(loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('suggestedPosts', ['$rootScope', '$filter', '$http', function ($rootScope, $filter, $http) {\n        return {\n            templateUrl: 'views/all/partials/templates/suggested_posts.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $rootScope.main.goToTop();\n\n                $scope.suggestedPosts = [];\n                $scope.suggestedPostsCount = 0;\n\n                function getSuggestedPosts() {\n                    getSuggestedPostsFromServer()\n                        .success(function (resp) {\n                            if (resp.postsArray.length > 0) {\n                                updateSuggestedPosts(resp.postsArray);\n                            } else {\n                                //do nothing\n                            }\n                            $rootScope.main.responseStatusHandler(resp);\n\n                        })\n                        .error(function (errResp) {\n                            $rootScope.main.responseStatusHandler(errResp);\n                        });\n                }\n\n                getSuggestedPosts();\n\n                function getSuggestedPostsFromServer() {\n                    return $http.post('/api/getSuggestedPosts', {})\n                }\n\n                function updateSuggestedPosts(suggestedPostsArray) {\n                    if (suggestedPostsArray == []) {\n                        $scope.suggestedPosts = [];\n                    } else {\n                        $scope.suggestedPosts = $filter('preparePostsNoChange')(null, suggestedPostsArray);\n                    }\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('titleDirective', ['globals', function (globals) {\n        return {\n            template: '<title ng-bind=\"defaultTitle\">' + '</title>',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.defaultTitle = globals.getDocumentTitle();\n                $scope.$watch(globals.getDocumentTitle, function () {\n                    $scope.defaultTitle = globals.getDocumentTitle();\n                });\n            }\n        }\n    }]);","angular.module('app')\n    .directive('universalSearchBoxScope', ['$window', '$location', '$rootScope', 'globals', function ($window, $location, $rootScope, globals) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.mainSearchModel = {\n                    queryString: \"\",\n                    requestedPage: 1\n                };\n\n                $scope.performMainSearch = function () {\n                    if ($scope.mainSearchModel.queryString.length > 0) {\n                        $rootScope.main.redirectToPage('/search/posts/' + $scope.mainSearchModel.queryString + '/' + $scope.mainSearchModel.requestedPage);\n                    }\n                };\n            }\n        }\n    }]);","angular.module('app')\n\n    .factory('fN', ['$q', '$location', '$window', '$rootScope', 'socketService',\n        function ($q, $location, $window, $rootScope, socketService) {\n            return {\n                calcObjectLength: function (obj) {\n                    var len = 0;\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            len++;\n                        }\n                    }\n                    return len\n                }\n            };\n        }]);","angular.module('app')\n    .factory('globals', ['$q', '$location', '$rootScope',\n        function ($q, $location, $rootScope) {\n            var userData = {};\n            var allData = {\n                documentTitle: \"Negus Math - College Level Advanced Mathematics for Kenya Students\",\n                indexPageUrl: $location.port() ? \"http://\" + $location.host() + \":\" + $location.port() + \"/index\" : $scope.indexPageUrl = \"http://\" + $location.host() + \"/index\"\n            };\n\n            return {\n\n                userData: function (data) {\n                    if (data) {\n                        userData = data;\n                        return userData;\n                    } else {\n                        return userData;\n                    }\n                },\n\n                allData: allData,\n\n                getDocumentTitle: function () {\n                    return allData.documentTitle\n                },\n\n                defaultDocumentTitle: function () {\n                    allData.documentTitle = \"Negus Math - College Level Advanced Mathematics for Kenya Students\";\n                },\n\n                changeDocumentTitle: function (newDocumentTitle) {\n                    if (newDocumentTitle) {\n                        allData.documentTitle = newDocumentTitle;\n                    }\n                    return allData.documentTitle\n                },\n\n                getLocationHost: function () {\n                    if (document.location.hostname.search(\"negusmath\") !== -1) {\n                        return \"//www.negusmath.com\";\n                    } else {\n                        if ($location.port()) {\n                            return 'http://localhost' + \":\" + $location.port();\n                        } else {\n                            return 'http://localhost';\n                        }\n                    }\n                },\n\n                checkAccountStatus: function () {\n                    function getStatus(userData) {\n                        if (userData && Object.keys(userData) > 0) {\n                            if (userData.isRegistered) {\n                                if (!userData.emailIsConfirmed) {\n                                    return {\n                                        show: true,\n                                        bannerClass: \"alert alert-warning\",\n                                        msg: \"Please confirm your account by clicking the confirmation link we sent on your email. Please also check your spam folder\",\n                                        showResendEmail: true,\n                                        accountStatus: false\n                                    };\n                                } else if (userData.isApproved === false) {\n                                    return {\n                                        show: true,\n                                        bannerClass: \"alert alert-warning\",\n                                        msg: \"Your account is awaiting approval from the administrators. Please allow up to 3 business days. You will get an email notification as soon as your account is approved.\",\n                                        showResendEmail: false,\n                                        accountStatus: false\n                                    };\n                                } else if (userData.isBanned) {\n                                    if (userData.isBanned.status === true) {\n                                        //checking banned status\n                                        return {\n                                            show: true,\n                                            bannerClass: \"alert alert-warning\",\n                                            msg: \"Your have been banned from this service. Please contact the administrators for more information\",\n                                            showResendEmail: false,\n                                            accountStatus: false\n                                        };\n                                    } else {\n                                        return {\n                                            show: false,\n                                            bannerClass: \"\",\n                                            msg: \"\",\n                                            showResendEmail: false,\n                                            accountStatus: true\n                                        };\n                                    }\n                                } else {\n                                    return {\n                                        show: false,\n                                        bannerClass: \"\",\n                                        msg: \"\",\n                                        showResendEmail: false,\n                                        accountStatus: true\n                                    };\n                                }\n                            } else {\n                                console.log(userData);\n                                return {\n                                    show: true,\n                                    bannerClass: \"alert alert-warning\",\n                                    msg: \"You are not registered. Please reload this page to create an account\",\n                                    showResendEmail: false,\n                                    accountStatus: false\n                                };\n                            }\n                        } else {\n                            //userData might not have loaded yet here, forgive this part\n                            return {\n                                show: false,\n                                bannerClass: \"\",\n                                msg: \"\",\n                                showResendEmail: false,\n                                accountStatus: true\n                            };\n                        }\n                    }\n\n                    var theStatus = getStatus(userData);\n                    $rootScope.$broadcast('universalBanner', theStatus);\n                    return theStatus.accountStatus;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('mainService', ['$log', '$window', '$rootScope', 'socket',\n        function ($log, $window, $rootScope, socket) {\n\n            socket.on('reconnect', function () {\n                $log.info(\"'reconnect sequence' triggered\");\n                $rootScope.$broadcast('reconnect');\n            });\n\n            return {\n                done: function () {\n                    return 1;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('PopularStoriesService', ['$filter', '$log', '$http', '$window', '$rootScope', 'socket',\n        function ($filter, $log, $http, $window, $rootScope, socket) {\n\n            var popularStories = [];\n\n            return {\n\n                getPopularStories: function () {\n                    return popularStories;\n                },\n\n                getPopularStoriesFromServer: function () {\n                    return $http.post('/api/getPopularStories', {})\n                },\n\n                updatePopularStories: function (popularStoriesArray) {\n                    if (popularStoriesArray == []) {\n                        popularStories = [];\n                    } else {\n                        popularStories = $filter('preparePostsNoChange')(null, popularStoriesArray);\n                    }\n                    return popularStoriesArray;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('socket', ['$log', '$location', '$rootScope',\n        function ($log, $location, $rootScope) {\n            var url;\n\n            if (document.location.hostname.search(\"negusmath\") !== -1) {\n                url = \"//www.negusmath.com\";\n            } else {\n                if ($location.port()) {\n                    url = 'http://localhost' + \":\" + $location.port();\n                } else {\n                    url = 'http://localhost';\n                }\n            }\n\n            var socket = io.connect(url);\n            //return socket;\n            return {\n                on: function (eventName, callback) {\n                    socket.on(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                },\n\n                emit: function (eventName, data, callback) {\n                    socket.emit(eventName, data, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            if (callback) {\n                                callback.apply(socket, args);\n                            }\n                        });\n                    });\n                },\n\n                removeAllListeners: function (eventName, callback) {\n                    socket.removeAllListeners(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                }\n            };\n        }\n    ])\n\n\n    .factory('socketService', ['$log', '$http', '$rootScope',\n        function ($log, $http, $rootScope) {\n\n            return {\n\n                getUserData: function () {\n                    return $http.get('/api/getUserData');\n                },\n\n                createAccount: function (details) {\n                    return $http.post('/createAccount', details);\n                },\n\n                localUserLogin: function (loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                },\n\n                resendConfirmationEmail: function (userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                },\n\n                sendContactUs: function (contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    ])\n\n    .factory('logoutService', ['$http',\n        function ($http) {\n            return {\n\n                logoutClient: function () {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }]);","angular.module('app')\n    .run(['$templateCache', '$http', '$rootScope', '$state', '$stateParams', function ($templateCache, $http, $rootScope, $state, $stateParams) {\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n        $rootScope.Utils = {\n            keys: Object.keys\n        };\n    }])\n\n    .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', function ($stateProvider, $urlRouterProvider, $locationProvider) {\n        //    $urlRouterProvider\n        //        .when(\"/home/stream/\", '/home/stream/1')\n        //        .when(\"/home/post/\", '/home')\n        //        .when(\"/home/editPost/\", '/home')\n        //        .when(\"/home/search/\", '/home/')\n        //        .otherwise(\"/home\");\n        //\n        //    $stateProvider\n        //        .state('home', {\n        //            url: '/home',\n        //        })\n        //        .state('home.post', {\n        //            url: '/post/:postIndex',\n        //            templateUrl: 'views/all/partials/views/home/full_post.html'\n        //        })\n        //        .state('home.newPost', {\n        //            url: '/newPost',\n        //            templateUrl: 'views/all/partials/views/home/new_post.html'\n        //        })\n        //        .state('home.editPost', {\n        //            url: '/editPost/:postIndex',\n        //            templateUrl: 'views/all/partials/views/home/edit_post.html'\n        //        })\n        //        .state('home.search', {\n        //            url: '/search/:queryString/:pageNumber',\n        //            templateUrl: 'views/search/search_results.html'\n        //        })\n        //        .state('users', {\n        //            url: '/users',\n        //            templateUrl: 'views/all/partials/views/users/users.html'\n        //        })\n        //        .state(\"otherwise\", {url: '/home'});\n\n        //$locationProvider\n        //    .html5Mode(false)\n        //    .hashPrefix('!');\n    }])\n    .value('duScrollOffset', 60);","angular.module('app')\n    .controller('MainController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'mainService', 'socketService', 'globals',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, mainService, socketService, globals) {\n\n            //function that determines if it's okay for the user to proceed\n            $scope.checkAccountStatus = function (userData) {\n                if (userData) {\n                    if (userData.isRegistered) {\n                        if (userData.emailIsConfirmed == false) {\n                            return false;\n                        } else {\n                            if (userData.isApproved === false) {\n                                return false\n                            } else if (userData.isBanned) {\n                                if (userData.isBanned.status === true) {\n                                    //checking banned status\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            } else {\n                                return true;\n                            }\n                        }\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            };\n\n            //variable that holds the account status\n            $scope.accountStatusIsGood = false;\n\n            $rootScope.$on('userDataChanges', function () {\n                $scope.accountStatusIsGood = $scope.checkAccountStatus(globals.userData);\n            });\n        }\n    ]);"],"sourceRoot":"/source/"}