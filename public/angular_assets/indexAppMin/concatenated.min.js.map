{"version":3,"sources":["app.js","adirectives/accountOuter.js","adirectives/bannerDir.js","adirectives/contactUs.js","adirectives/createAccount.js","adirectives/footer.js","adirectives/logout.js","adirectives/postViewDir.js","adirectives/resendEmail.js","adirectives/signIn.js","adirectives/suggestedPostsDir.js","adirectives/title.js","adirectives/universalSearchBoxDir.js","controllers/popularCtrl.js","controllers/universalCtrl.js","filters/filters.js","services/functions.js","services/globals.js","services/mainFactory.js","services/popularStoriesService.js","services/socketIoService.js","aindexApp.js","controllers/mainCtrl.js"],"names":["angular","module","directive","$rootScope","restrict","link","$scope","$element","$attrs","userLoginState","changeUserLoginState","newState","templateUrl","newPostBanner","show","bannerClass","msg","$on","event","banner","toastr","showToast","toastType","text","clear","success","warning","closeButton","tapToDismiss","error","timeOut","clearToasts","signInBanner","registrationBanner","$http","validateContactUs","name","email","message","errors","length","main","sendContactUs","contactUsModel","post","formStatus","resp","responseStatusHandler","errResp","createAccount","details","registrationDetails","firstName","lastName","username","password1","password2","invitationCode","isDialog","errResponse","logoutClient","$filter","scope","postContent","postSummary","postTags","resendConfirmationEmail","userUniqueCuid","console","log","err","localUserLogin","loginData","loginFormModel","password","submitLocalLoginForm","getSuggestedPosts","getSuggestedPostsFromServer","postsArray","updateSuggestedPosts","suggestedPostsArray","suggestedPosts","suggestedPostsCount","globals","template","defaultTitle","getDocumentTitle","$watch","$window","$location","mainSearchModel","queryString","requestedPage","performMainSearch","redirectToPage","parseInt","controller","$q","$log","PopularStoriesService","getPopularStories","getPopularStoriesFromServer","popularStories","updatePopularStories","$interval","socket","socketService","$document","notifications","initialRequests","getUserData","userData","broadcastUserData","isRegistered","emit","room","uniqueCuid","indexPageUrl","allData","currentHost","getLocationHost","showDisqus","host","search","duration","currentTime","showLoadingBannerDir","showLoadingBanner","this","hideLoadingBanner","goToTop","someElement","element","document","getElementById","scrollToElement","$broadcast","type","clearBanners","isLoading","startLoading","finishedLoading","pathWithFirstSlash","location","href","showDialogBox","dialogId","showDialog","moment","format","updateCurrentTime","history","stateHistory","toState","toParams","fromState","fromParams","push","$$path","temp","back","window","backAngular","prevUrl","splice","path","filter","time","local","raw","Date","now","isDate","getTime","offset","Math","abs","span","MINUTE","HOUR","DAY","WEEK","YEAR","DECADE","round","join","createdAt","postIndex","posts","makeResp","theElement","$","imgElement","imgWrappedInDiv","addClass","wrap","find","replaceWith","html","Object","keys","forEach","index","textString","theElementString","highlight","checkSearchState","$state","current","status","$stateParams","hasOwnProperty","highLightThisText","textToHighlight","finalString","highlightDetails","theElement2","removeHighlight","theElement3","highlightPostTags","tag","prepare","timeAgo","postDate","postAbsoluteUrl","postPath","postHeading","authorName","removePostTagsHighlight","ngDialog","makeBanner","not_authorized_dialog","open","className","overlay","showClose","closeByEscape","closeByDocument","cache","trapFocus","preserveFocus","sign_in_dialog","openConfirm","then","redirect","redirectPage","notify","dialog","id","reason","warn","factory","calcObjectLength","obj","len","prop","documentTitle","port","data","defaultDocumentTitle","changeDocumentTitle","newDocumentTitle","hostname","checkAccountStatus","getStatus","emailIsConfirmed","isApproved","showResendEmail","accountStatus","isBanned","theStatus","on","info","done","popularStoriesArray","url","io","connect","eventName","callback","args","arguments","$apply","apply","removeAllListeners","get","run","$templateCache","Utils","config","$stateProvider","$urlRouterProvider","$locationProvider","notificationsConfigProvider","html5Mode","setAutoHide","setHideDelay","setAcceptHTML","value","mainService","accountStatusIsGood"],"mappings":"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","file":"concatenated.min.js","sourcesContent":["//angular sanitize included in textAngular\nangular.module('app', [\n    'ui.bootstrap',\n    'cfp.loadingBar',\n    'angulartics',\n    'angulartics.google.analytics',\n    'angularMoment',\n    'ui.router',\n    'duScroll',\n    'ngFx',\n    'ngNotificationsBar',\n    'textAngular',\n    'angularUtils.directives.dirDisqus',\n    'ngTagsInput',\n    'ui.utils',\n    'ngFileUpload',\n    'toastr',\n    'ngDialog'\n]);","angular.module('app')\n    .directive('accountOuterScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //variable to hold state between local login and creating a new account\n                //values =  signIn, register\n                $scope.userLoginState = 'signIn';\n                $scope.changeUserLoginState = function (newState) {\n                    $scope.userLoginState = newState;\n                };\n            }\n        }\n    }])\n    .directive('accountOuterDialogScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //variable to hold state between local login and creating a new account\n                //values =  signIn, register\n                $scope.userLoginState = 'signIn';\n                $scope.changeUserLoginState = function (newState) {\n                    $scope.userLoginState = newState;\n                };\n            }\n        }\n    }]);","angular.module('app')\n    .directive('newPostBanner', ['$rootScope', function ($rootScope) {\n        return {\n            templateUrl: 'views/all/partials/templates/new_post_banner.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.newPostBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('newPostBanner', function (event, banner) {\n                    $scope.newPostBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.newPostBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('toastrDirective', ['$rootScope', 'toastr', function ($rootScope, toastr) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $rootScope.showToast = function (toastType, text) {\n                    switch (toastType) {\n                        case \"success\":\n                            toastr.clear();\n                            toastr.success(text);\n                            break;\n                        case \"warning\":\n                            toastr.clear();\n                            toastr.warning(text, 'Warning', {\n                                closeButton: true,\n                                tapToDismiss: true\n                            });\n                            break;\n                        case \"error\":\n                            toastr.clear();\n                            toastr.error(text, 'Error', {\n                                closeButton: true,\n                                tapToDismiss: true,\n                                timeOut: false\n                            });\n                            break;\n                        default:\n                            //clears current list of toasts\n                            toastr.clear();\n                    }\n                };\n\n                $rootScope.clearToasts = function () {\n                    toastr.clear();\n                };\n            }\n        }\n    }])\n    .directive('signInBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.signInBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('signInBanner', function (event, banner) {\n                    $scope.signInBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.signInBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('registrationBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('registrationBanner', function (event, banner) {\n                    $scope.registrationBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.registrationBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }]);","angular.module('app')\n    .directive('contactUsScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.contactUsModel = {\n                    name: \"\",\n                    email: \"\",\n                    message: \"\"\n                };\n\n                function validateContactUs(name, email, message) {\n                    var errors = 0;\n\n                    if (!name || name.length == 0) {\n                        ++errors;\n                        $rootScope.main.showToast('warning', \"Please enter your name\");\n                        return -1\n                    } else if (!email || email.length == 0) {\n                        ++errors;\n                        $rootScope.main.showToast('warning', \"Please enter a valid email\");\n                        return -1\n                    } else if (!message || message.length == 0) {\n                        ++errors;\n                        $rootScope.main.showToast('warning', \"Message field is empty\");\n                        return -1;\n                    } else if (errors == 0) {\n                        return 1;\n                    }\n                }\n\n                $scope.sendContactUs = function () {\n                    var formStatus = validateContactUs($scope.contactUsModel.name, $scope.contactUsModel.email, $scope.contactUsModel.message);\n                    if (formStatus == 1) {\n                        sendContactUs($scope.contactUsModel)\n                            .success(function (resp) {\n                                $scope.contactUsModel.name = \"\";\n                                $scope.contactUsModel.email = \"\";\n                                $scope.contactUsModel.message = \"\";\n                                $rootScope.main.responseStatusHandler(resp);\n                            })\n                            .error(function (errResp) {\n                                $rootScope.main.responseStatusHandler(errResp);\n                            });\n                    }\n                };\n\n                function sendContactUs(contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    }])\n    .directive('contactUs', [function () {\n        return {\n            templateUrl: 'views/all/partials/components/contact_us.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //depends on contactUsScope\n            }\n        }\n    }]);","angular.module('app')\n    .directive('createAccountScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\",\n                    invitationCode: \"\",\n                    isDialog: false\n                };\n\n                $scope.createAccount = function () {\n                    createAccount($scope.registrationDetails)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            $scope.registrationDetails.invitationCode = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function createAccount(details) {\n                    return $http.post('/createAccount', details);\n                }\n            }\n        }\n    }])\n    .directive('createAccountDialogScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\",\n                    invitationCode: \"\",\n                    isDialog: true\n                };\n\n                $scope.createAccount = function () {\n                    createAccount($scope.registrationDetails)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            $scope.registrationDetails.invitationCode = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function createAccount(details) {\n                    return $http.post('/createAccount', details);\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('mainFooter', [function () {\n        return {\n            templateUrl: 'views/all/partials/components/main_footer.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n            }\n        }\n    }]);","angular.module('app')\n    .directive('logoutScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.logoutClient = function () {\n                    logoutClient()\n                        .success(function (resp) {\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function logoutClient() {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('postContent', ['$filter', function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_content.html',\n            scope: {\n                postContent: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.postContent = $filter('preparePostContent')($scope.postContent);\n            }\n        }\n    }])\n    .directive('postSummary', ['$filter',function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_summary.html',\n            scope: {\n                postSummary: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.postSummary = $filter('preparePostSummary')($scope.postSummary);\n            }\n        }\n    }])\n    .directive('postTags', ['$filter',function ($filter) {\n        return {\n            templateUrl: 'views/all/partials/templates/post_tags.html',\n            scope: {\n                postTags: '=model'\n            },\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n            }\n        }\n    }]);","angular.module('app')\n    .directive('resendEmailScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.resendConfirmationEmail = function (userUniqueCuid) {\n                    console.log(userUniqueCuid);\n                    resendConfirmationEmail(userUniqueCuid)\n                        .success(function (resp) {\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (err) {\n                            $rootScope.main.responseStatusHandler(err);\n                        })\n                };\n\n                function resendConfirmationEmail(userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('signInScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\",\n                    isDialog: false\n                };\n\n                $scope.submitLocalLoginForm = function () {\n                    localUserLogin($scope.loginFormModel)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function localUserLogin(loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                }\n            }\n        }\n    }])\n    .directive('signInDialogScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\",\n                    isDialog: true\n                };\n\n                $scope.submitLocalLoginForm = function () {\n                    localUserLogin($scope.loginFormModel)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.main.responseStatusHandler(errResponse);\n                        });\n                };\n\n                function localUserLogin(loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('suggestedPosts', ['$rootScope', '$filter', '$http', function ($rootScope, $filter, $http) {\n        return {\n            templateUrl: 'views/all/partials/templates/suggested_posts.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.suggestedPosts = [];\n                $scope.suggestedPostsCount = 0;\n\n                function getSuggestedPosts() {\n                    getSuggestedPostsFromServer()\n                        .success(function (resp) {\n                            if (resp.postsArray.length > 0) {\n                                updateSuggestedPosts(resp.postsArray);\n                            } else {\n                                //do nothing\n                            }\n                            $rootScope.main.responseStatusHandler(resp);\n\n                        })\n                        .error(function (errResp) {\n                            $rootScope.main.responseStatusHandler(errResp);\n                        });\n                }\n\n                getSuggestedPosts();\n\n                function getSuggestedPostsFromServer() {\n                    return $http.post('/api/getSuggestedPosts', {})\n                }\n\n                function updateSuggestedPosts(suggestedPostsArray) {\n                    if (suggestedPostsArray == []) {\n                        $scope.suggestedPosts = [];\n                    } else {\n                        $scope.suggestedPosts = $filter('preparePostsNoChange')(null, suggestedPostsArray);\n                    }\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('titleDirective', ['globals', function (globals) {\n        return {\n            template: '<title ng-bind=\"defaultTitle\">' + '</title>',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.defaultTitle = globals.getDocumentTitle();\n                $scope.$watch(globals.getDocumentTitle, function () {\n                    $scope.defaultTitle = globals.getDocumentTitle();\n                });\n            }\n        }\n    }]);","angular.module('app')\n    .directive('universalSearchBoxScope', ['$window', '$location', '$rootScope', 'globals', function ($window, $location, $rootScope, globals) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.mainSearchModel = {\n                    queryString: \"\",\n                    requestedPage: 1\n                };\n\n                $scope.performMainSearch = function () {\n                    if ($scope.mainSearchModel.queryString.length > 0) {\n                        $rootScope.main.redirectToPage('/search/posts?q=' + $scope.mainSearchModel.queryString + '&page=' + parseInt($scope.mainSearchModel.requestedPage));\n                    }\n                };\n            }\n        }\n    }]);","angular.module('app')\n    .controller('PopularStoriesController', ['$q', '$log', '$scope', '$rootScope', 'PopularStoriesService', 'globals',\n        function ($q, $log, $scope, $rootScope, PopularStoriesService, globals) {\n\n            $scope.popularStories = PopularStoriesService.getPopularStories();\n\n            function getPopularStories() {\n                PopularStoriesService.getPopularStoriesFromServer()\n                    .success(function (resp) {\n                        $rootScope.main.responseStatusHandler(resp);\n                        $scope.popularStories = PopularStoriesService.updatePopularStories(resp.popularStories);\n                    })\n                    .error(function (errResp) {\n                        $scope.popularStories = PopularStoriesService.updatePopularStories([]);\n                        $rootScope.main.responseStatusHandler(errResp);\n                    });\n            }\n\n            getPopularStories();\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnect', function () {\n                getPopularStories();\n            });\n        }\n    ]);","angular.module('app')\n    .controller('UniversalController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'socketService', 'globals', '$document', 'notifications',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, socketService, globals, $document, notifications) {\n\n            //index page url\n            $scope.indexPageUrl = globals.allData.indexPageUrl;\n\n            //website host\n            $rootScope.currentHost = globals.getLocationHost();\n\n            //disqus\n            $scope.showDisqus = $location.host().search(\"negusmath\") !== -1;\n\n            //scrolling functions\n            var duration = 0; //milliseconds\n            var offset = 40; //pixels; adjust for floating menu, context etc\n            //Scroll to #some-id with 30 px \"padding\"\n            //Note: Use this in a directive, not with document.getElementById\n\n            $rootScope.main = {\n                currentTime: \"\",\n\n                showLoadingBannerDir: false,\n\n                showLoadingBanner: function () {\n                    this.showLoadingBannerDir = true;\n                },\n\n                hideLoadingBanner: function () {\n                    this.showLoadingBannerDir = false;\n                },\n\n                goToTop: function () {\n                    var someElement = angular.element(document.getElementById('top'));\n                    $document.scrollToElement(someElement, 80, duration);\n                },\n\n                broadcastUserData: function () {\n                    $rootScope.$broadcast('userDataChanges');\n                },\n\n                responseStatusHandler: function (resp) {\n                    $filter('responseFilter')(resp);\n                },\n\n                showToast: function (type, msg) {\n                    $rootScope.showToast(type, msg);\n                },\n\n                clearBanners: function () {\n                    $rootScope.$broadcast('clearBanners');\n                },\n\n                isLoading: true,\n\n                startLoading: function () {\n                    this.isLoading = true;\n                },\n\n                finishedLoading: function () {\n                    $rootScope.isLoading = false;\n                },\n\n                redirectToPage: function (pathWithFirstSlash) {\n                    $window.location.href = globals.getLocationHost() + pathWithFirstSlash;\n                },\n\n                showDialogBox: function (dialogId) {\n                    if ($rootScope.showDialog) {\n                        $rootScope.showDialog(dialogId);\n                    }\n                }\n\n            };\n\n            //=====================time functions=======================\n            //set current Date\n            $scope.currentTime = moment().format(\"ddd, MMM D, H:mm\");\n            var updateCurrentTime = function () {\n                $scope.currentTime = moment().format(\"ddd, MMM D, H:mm\");\n            };\n            $interval(updateCurrentTime, 20000, 0, true);\n\n            //======================end time functions===================\n\n            //initial requests\n            function initialRequests() {\n                socketService.getUserData()\n                    .success(function (resp) {\n                        $rootScope.main.responseStatusHandler(resp);\n                        $scope.userData = globals.userData(resp.userData);\n                        $rootScope.main.broadcastUserData();\n\n                        if ($scope.userData.isRegistered) {\n                            //join a socketRoom for websocket connection, equivalent to user's uniqueCuid\n                            socket.emit('joinRoom', {\n                                room: resp.userData.uniqueCuid\n                            });\n                        }\n                    })\n                    .error(function (errResponse) {\n                        $rootScope.main.responseStatusHandler(errResponse);\n                    });\n            }\n\n            initialRequests();\n\n            //$scope functions to be used in other controllers and directives\n            //back navigation functionality\n            var history = [];\n            $rootScope.stateHistory = [];\n            $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n                history.push($location.$$path);\n                //push the previous state also\n                var temp = {};\n                temp[fromState.name] = fromParams;\n                $rootScope.stateHistory.push(temp);\n            });\n\n            $rootScope.back = function () {\n                window.history.back();\n            };\n\n            $rootScope.backAngular = function () {\n                var prevUrl = history.length > 1 ? history.splice(-2)[0] : \"/\";\n                $location.path(prevUrl);\n            };\n\n            $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n                $rootScope.main.clearBanners();\n                $rootScope.clearToasts();\n            });\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnect', function () {\n                initialRequests();\n            });\n        }\n    ]);","angular.module('app')\n    .filter(\"timeago\", [function () {\n        //time: the time\n        //local: compared to what time? default: now\n        //raw: whether you want in a format of \"5 minutes ago\", or \"5 minutes\"\n        return function (time, local, raw) {\n            if (!time) return \"never\";\n\n            if (!local) {\n                (local = Date.now())\n            }\n\n            if (angular.isDate(time)) {\n                time = time.getTime();\n            } else if (typeof time === \"string\") {\n                time = new Date(time).getTime();\n            }\n\n            if (angular.isDate(local)) {\n                local = local.getTime();\n            } else if (typeof local === \"string\") {\n                local = new Date(local).getTime();\n            }\n\n            if (typeof time !== 'number' || typeof local !== 'number') {\n                return;\n            }\n\n            var\n                offset = Math.abs((local - time) / 1000),\n                span = [],\n                MINUTE = 60,\n                HOUR = 3600,\n                DAY = 86400,\n                WEEK = 604800,\n                MONTH = 2629744,\n                YEAR = 31556926,\n                DECADE = 315569260;\n\n            if (offset <= MINUTE)              span = ['', raw ? 'now' : 'less than a minute'];\n            else if (offset < (MINUTE * 60))   span = [Math.round(Math.abs(offset / MINUTE)), 'min'];\n            else if (offset < (HOUR * 24))     span = [Math.round(Math.abs(offset / HOUR)), 'hr'];\n            else if (offset < (DAY * 7))       span = [Math.round(Math.abs(offset / DAY)), 'day'];\n            else if (offset < (WEEK * 52))     span = [Math.round(Math.abs(offset / WEEK)), 'week'];\n            else if (offset < (YEAR * 10))     span = [Math.round(Math.abs(offset / YEAR)), 'year'];\n            else if (offset < (DECADE * 100))  span = [Math.round(Math.abs(offset / DECADE)), 'decade'];\n            else                               span = ['', 'a long time'];\n\n            span[1] += (span[0] === 0 || span[0] > 1) ? 's' : '';\n            span = span.join(' ');\n\n            if (raw === true) {\n                return span;\n            }\n            return (time <= local) ? span + ' ago' : 'in ' + span;\n        }\n    }])\n    .filter(\"getTimeAgo\", ['$filter', function ($filter) {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return $filter('timeago')(createdAt);\n        }\n    }])\n    .filter(\"getPostDate\", [function () {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return moment(createdAt).format(\"ddd, MMM D, H:mm\");\n        }\n    }])\n    .filter(\"getPostAbsoluteUrl\", [function () {\n        return function (postIndex) {\n            return 'http://www.negusmath.com/#!/home/post/' + postIndex;\n        }\n    }])\n    .filter(\"getPostPath\", [function () {\n        return function (postIndex) {\n            return '/#!/home/post/' + postIndex;\n        }\n    }])\n    .filter(\"makeVideoIframesResponsive\", [function () {\n        //making embedded videos responsive\n        return function (post, posts) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(post) {\n                if (post.postSummary) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postSummary + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postSummary = theElement.html();\n\n                }\n                if (post.postContent) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postContent + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postContent = theElement.html();\n                }\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return makeResp(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = makeResp(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"getVideoResponsiveVersion\", [function () {\n        //making embedded videos responsive\n        return function (textString) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(textString) {\n                //convert the element to string\n                theElement = $(\"<div>\" + textString + \"</div>\");\n\n                //find the video iframe elements\n                imgElement = $('img.ta-insert-video', theElement);\n\n                //only perform operation if there are iframes available\n                if (imgElement.length > 0) {\n\n                    //add class and wrap in div\n                    imgWrappedInDiv = imgElement\n                        .addClass('embed-responsive-item')\n                        .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                    //replace in original\n                    theElement.find('img').replaceWith(imgWrappedInDiv);\n                }\n                return theElement.html();\n            }\n\n            if (textString) {\n                return makeResp(textString)\n            } else {\n                return textString;\n            }\n        }\n    }])\n    .filter(\"highlightText\", ['$rootScope', function ($rootScope) {\n        //making embedded videos responsive\n        //the highlight variable should be a boolean to make the function\n        //know if to highlight or not\n        //if false then the function will remove highlight\n        return function (theElementString, highlight) {\n            //text is highlighted only if the present or previous state was search\n            //this fn checks if the present or previous state was search, and returns an object with status false if not\n            //if true, the returned object carries the queryString with it\n\n            function checkSearchState() {\n                //check latest state\n                if ($rootScope.$state.current.name == 'home.search') {\n                    return {\n                        status: true,\n                        queryString: $rootScope.$stateParams.queryString || \"\"\n                    }\n                } else if ($rootScope.stateHistory.length > 0) {\n                    //check if previous state was search and current state is post\n                    if ($rootScope.stateHistory[$rootScope.stateHistory.length - 1].hasOwnProperty('home.search') && $rootScope.$state.current.name == 'home.post') {\n                        //checking the previous state\n                        return {\n                            status: true,\n                            queryString: $rootScope.stateHistory[$rootScope.stateHistory.length - 1]['home.search'].queryString\n                        }\n                    } else {\n                        return {\n                            status: false\n                        }\n                    }\n                } else {\n                    return {\n                        status: false\n                    }\n                }\n            }\n\n            function highLightThisText(textToHighlight) {\n                if (highlight) {\n                    var finalString = textToHighlight;\n                    var highlightDetails = checkSearchState();\n                    if (highlightDetails.status === true) {\n                        //highlight\n                        var theElement = $(\"<div>\" + textToHighlight + \"</div>\");\n                        $(theElement).highlight(highlightDetails.queryString);\n                        finalString = theElement.html();\n                    } else {\n                        //remove highlight\n                        var theElement2 = $(\"<div>\" + textToHighlight + \"</div>\");\n                        $(theElement2).removeHighlight();\n                        finalString = theElement2.html();\n                    }\n                } else {\n                    //remove highlight\n                    var theElement3 = $(\"<div>\" + textToHighlight + \"</div>\");\n                    $(theElement3).removeHighlight();\n                    finalString = theElement3.html();\n                }\n\n                return finalString;\n            }\n\n            return highLightThisText(theElementString);\n\n        }\n    }])\n    .filter(\"preparePosts\", ['$filter', function ($filter) {\n        //making embedded videos responsive\n        return function (post, posts) {\n            function highlightPostTags(postTags) {\n                if (postTags.length > 0) {\n                    postTags.forEach(function (tag, index) {\n                        postTags[index].text = $filter('highlightText')(tag.text, true);\n                    });\n                }\n\n                return postTags;\n            }\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                post.postHeading = $filter('highlightText')(post.postHeading, true);\n                post.authorName = $filter('highlightText')(post.authorName, true);\n                post.postSummary = $filter('highlightText')($filter('getVideoResponsiveVersion')(post.postSummary), true);\n                post.postContent = $filter('highlightText')($filter('getVideoResponsiveVersion')(post.postContent), true);\n                post.postTags = highlightPostTags(post.postTags);\n\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"preparePostSummary\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postSummary) {\n\n            console.log(\"postSummary called\");\n\n            function prepare(postContent) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postSummary), true);\n            }\n\n            if (postSummary) {\n                return prepare(postSummary);\n            } else {\n\n                return postSummary;\n            }\n        }\n    }])\n    .filter(\"preparePostContent\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postContent) {\n\n            function prepare(postContent) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postContent), true);\n            }\n\n            if (postContent) {\n                return prepare(postContent);\n            } else {\n\n                return postContent;\n            }\n        }\n    }])\n    .filter(\"preparePostSummary\", ['$filter', function ($filter) {\n        //making embedded videos responsive in postContent\n        return function (postSummary) {\n\n            function prepare(postSummary) {\n                return $filter('highlightText')($filter('getVideoResponsiveVersion')(postSummary), true);\n            }\n\n            if (postSummary) {\n                return prepare(postSummary);\n            } else {\n\n                return postSummary;\n            }\n        }\n    }])\n    .filter(\"removeHighlights\", ['$filter', function ($filter) {\n        //making embedded videos responsive\n        return function (post, posts) {\n            function removePostTagsHighlight(postTags) {\n                if (postTags.length > 0) {\n                    postTags.forEach(function (tag, index) {\n                        postTags[index].text = $filter('highlightText')(tag.text, false);\n                    });\n                }\n\n                return postTags;\n            }\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                post.postHeading = $filter('highlightText')(post.postHeading, false);\n                post.authorName = $filter('highlightText')(post.authorName, false);\n                post.postSummary = $filter('highlightText')(post.postSummary, false);\n                post.postContent = $filter('highlightText')(post.postContent, false);\n                post.postTags = removePostTagsHighlight(post.postTags);\n\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"preparePostsNoChange\", ['$filter', function ($filter) {\n        //does not change the post to make it responsive and does not highlight\n        return function (post, posts) {\n\n            function prepare(post) {\n                post.timeAgo = $filter('getTimeAgo')(post.createdAt);\n                post.postDate = $filter('getPostDate')(post.createdAt);\n                post.postAbsoluteUrl = $filter('getPostAbsoluteUrl')(post.postIndex);\n                post.postPath = $filter('getPostPath')(post.postIndex);\n                return post;\n            }\n\n            if (post) {\n                if (Object.keys(post).length > 0) {\n                    return prepare(post);\n                } else {\n                    return post;\n                }\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    if (Object.keys(post).length > 0) {\n                        posts[index] = prepare(post);\n                    }\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"responseFilter\", ['$q', '$log', '$window', '$rootScope', 'notifications', 'ngDialog', function ($q, $log, $window, $rootScope, notifications, ngDialog) {\n        return function (resp) {\n            function makeBanner(show, bannerClass, msg) {\n                return {\n                    show: show ? true : false,\n                    bannerClass: bannerClass,\n                    msg: msg\n                }\n            }\n\n            function showNotificationBar(type, msg) {\n                switch (type) {\n                    case \"success\":\n                        notifications.showSuccess({\n                            message: msg\n                        });\n                        break;\n                    case \"warning\":\n                        notifications.showWarning({\n                            message: msg\n                        });\n                        break;\n                    case \"error\":\n                        notifications.showError({\n                            message: msg\n                        });\n                        break;\n                    default:\n                    //toastr.clear();\n                }\n            }\n\n            if (resp !== null && typeof resp === 'object') {\n                if (resp.redirect) {\n                    if (resp.redirect) {\n                        $window.location.href = resp.redirectPage;\n                    }\n                }\n                if (resp.notify) {\n                    if (resp.type && resp.msg) {\n                        $rootScope.showToast(resp.type, resp.msg);\n                        //showNotificationBar(resp.type, resp.msg);\n                    }\n                }\n                if (resp.dialog) {\n                    if (resp.id) {\n                        switch (resp.id) {\n                            case \"not-authorized\":\n                                not_authorized_dialog();\n                                break;\n                            case \"sign-in\":\n                                sign_in_dialog();\n                                break;\n                            default:\n                            //do nothing\n                        }\n                    }\n                }\n                if (resp.banner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('universalBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.newPostBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('newPostBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.signInBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('signInBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.registrationBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('registrationBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.reason) {\n                    $log.warn(resp.reason);\n                }\n            } else {\n                //do nothing\n            }\n\n            return true;\n\n            function not_authorized_dialog() {\n                ngDialog.open({\n                    template: '/dialog/not-authorized.html',\n                    className: 'ngdialog-theme-default',\n                    overlay: true,\n                    showClose: false,\n                    closeByEscape: true,\n                    closeByDocument: true,\n                    cache: false,\n                    trapFocus: true,\n                    preserveFocus: true\n                })\n            }\n\n            function sign_in_dialog() {\n                ngDialog.openConfirm({\n                    template: '/dialog/sign-in.html',\n                    className: 'ngdialog-theme-default',\n                    overlay: true,\n                    showClose: false,\n                    closeByEscape: false,\n                    closeByDocument: false,\n                    cache: true,\n                    trapFocus: true,\n                    preserveFocus: true\n                }).then(function () {\n                    //do nothing\n                }, function () {\n                    $rootScope.main.redirectToPage('/index');\n                });\n            }\n        }\n    }]);","angular.module('app')\n\n    .factory('fN', ['$q', '$location', '$window', '$rootScope', 'socketService',\n        function ($q, $location, $window, $rootScope, socketService) {\n            return {\n                calcObjectLength: function (obj) {\n                    var len = 0;\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            len++;\n                        }\n                    }\n                    return len\n                }\n            };\n        }]);","angular.module('app')\n    .factory('globals', ['$q', '$location', '$rootScope',\n        function ($q, $location, $rootScope) {\n            var userData = {};\n            var allData = {\n                documentTitle: \"Negus Math - College Level Advanced Mathematics for Kenya Students\",\n                indexPageUrl: $location.port() ? \"http://\" + $location.host() + \":\" + $location.port() + \"/index\" : $scope.indexPageUrl = \"http://\" + $location.host() + \"/index\"\n            };\n\n            return {\n\n                userData: function (data) {\n                    if (data) {\n                        userData = data;\n                        return userData;\n                    } else {\n                        return userData;\n                    }\n                },\n\n                allData: allData,\n\n                getDocumentTitle: function () {\n                    return allData.documentTitle\n                },\n\n                defaultDocumentTitle: function () {\n                    allData.documentTitle = \"Negus Math - College Level Advanced Mathematics for Kenya Students\";\n                },\n\n                changeDocumentTitle: function (newDocumentTitle) {\n                    if (newDocumentTitle) {\n                        allData.documentTitle = newDocumentTitle;\n                    }\n                    return allData.documentTitle\n                },\n\n                getLocationHost: function () {\n                    if (document.location.hostname.search(\"negusmath\") !== -1) {\n                        return \"//www.negusmath.com\";\n                    } else {\n                        if ($location.port()) {\n                            return 'http://localhost' + \":\" + $location.port();\n                        } else {\n                            return 'http://localhost';\n                        }\n                    }\n                },\n\n                checkAccountStatus: function () {\n                    function getStatus(userData) {\n                        if (userData && Object.keys(userData) > 0) {\n                            if (userData.isRegistered) {\n                                if (!userData.emailIsConfirmed) {\n                                    return {\n                                        show: true,\n                                        bannerClass: \"alert alert-warning\",\n                                        msg: \"Please confirm your account by clicking the confirmation link we sent on your email. Please also check your spam folder\",\n                                        showResendEmail: true,\n                                        accountStatus: false\n                                    };\n                                } else if (userData.isApproved === false) {\n                                    return {\n                                        show: true,\n                                        bannerClass: \"alert alert-warning\",\n                                        msg: \"Your account is awaiting approval from the administrators. Please allow up to 3 business days. You will get an email notification as soon as your account is approved.\",\n                                        showResendEmail: false,\n                                        accountStatus: false\n                                    };\n                                } else if (userData.isBanned) {\n                                    if (userData.isBanned.status === true) {\n                                        //checking banned status\n                                        return {\n                                            show: true,\n                                            bannerClass: \"alert alert-warning\",\n                                            msg: \"Your have been banned from this service. Please contact the administrators for more information\",\n                                            showResendEmail: false,\n                                            accountStatus: false\n                                        };\n                                    } else {\n                                        return {\n                                            show: false,\n                                            bannerClass: \"\",\n                                            msg: \"\",\n                                            showResendEmail: false,\n                                            accountStatus: true\n                                        };\n                                    }\n                                } else {\n                                    return {\n                                        show: false,\n                                        bannerClass: \"\",\n                                        msg: \"\",\n                                        showResendEmail: false,\n                                        accountStatus: true\n                                    };\n                                }\n                            } else {\n                                console.log(userData);\n                                return {\n                                    show: true,\n                                    bannerClass: \"alert alert-warning\",\n                                    msg: \"You are not registered. Please reload this page to create an account\",\n                                    showResendEmail: false,\n                                    accountStatus: false\n                                };\n                            }\n                        } else {\n                            //userData might not have loaded yet here, forgive this part\n                            return {\n                                show: false,\n                                bannerClass: \"\",\n                                msg: \"\",\n                                showResendEmail: false,\n                                accountStatus: true\n                            };\n                        }\n                    }\n\n                    var theStatus = getStatus(userData);\n                    $rootScope.$broadcast('universalBanner', theStatus);\n                    return theStatus.accountStatus;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('mainService', ['$log', '$window', '$rootScope', 'socket',\n        function ($log, $window, $rootScope, socket) {\n\n            socket.on('reconnect', function () {\n                $log.info(\"'reconnect sequence' triggered\");\n                $rootScope.$broadcast('reconnect');\n            });\n\n            return {\n                done: function () {\n                    return 1;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('PopularStoriesService', ['$filter', '$log', '$http', '$window', '$rootScope', 'socket',\n        function ($filter, $log, $http, $window, $rootScope, socket) {\n\n            var popularStories = [];\n\n            return {\n\n                getPopularStories: function () {\n                    return popularStories;\n                },\n\n                getPopularStoriesFromServer: function () {\n                    return $http.post('/api/getPopularStories', {})\n                },\n\n                updatePopularStories: function (popularStoriesArray) {\n                    if (popularStoriesArray == []) {\n                        popularStories = [];\n                    } else {\n                        popularStories = $filter('preparePostsNoChange')(null, popularStoriesArray);\n                    }\n                    return popularStoriesArray;\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .factory('socket', ['$log', '$location', '$rootScope',\n        function ($log, $location, $rootScope) {\n            var url;\n\n            if (document.location.hostname.search(\"negusmath\") !== -1) {\n                url = \"//www.negusmath.com\";\n            } else {\n                if ($location.port()) {\n                    url = 'http://localhost' + \":\" + $location.port();\n                } else {\n                    url = 'http://localhost';\n                }\n            }\n\n            var socket = io.connect(url);\n            //return socket;\n            return {\n                on: function (eventName, callback) {\n                    socket.on(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                },\n\n                emit: function (eventName, data, callback) {\n                    socket.emit(eventName, data, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            if (callback) {\n                                callback.apply(socket, args);\n                            }\n                        });\n                    });\n                },\n\n                removeAllListeners: function (eventName, callback) {\n                    socket.removeAllListeners(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                }\n            };\n        }\n    ])\n\n\n    .factory('socketService', ['$log', '$http', '$rootScope',\n        function ($log, $http, $rootScope) {\n\n            return {\n\n                getUserData: function () {\n                    return $http.get('/api/getUserData');\n                },\n\n                createAccount: function (details) {\n                    return $http.post('/createAccount', details);\n                },\n\n                localUserLogin: function (loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                },\n\n                resendConfirmationEmail: function (userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                },\n\n                sendContactUs: function (contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    ])\n\n    .factory('logoutService', ['$http',\n        function ($http) {\n            return {\n\n                logoutClient: function () {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }]);","//angular sanitize included in textAngular\nangular.module('app')\n    .run(['$templateCache', '$http', '$rootScope', '$state', '$stateParams', function ($templateCache, $http, $rootScope, $state, $stateParams) {\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n        $rootScope.Utils = {\n            keys: Object.keys\n        };\n    }])\n\n    .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', 'notificationsConfigProvider', function ($stateProvider, $urlRouterProvider, $locationProvider, notificationsConfigProvider) {\n        $locationProvider.html5Mode(true);\n        //    $urlRouterProvider\n        //        .when(\"/home/stream/\", '/home/stream/1')\n        //        .when(\"/home/post/\", '/home')\n        //        .when(\"/home/editPost/\", '/home')\n        //        .when(\"/home/search/\", '/home/')\n        //        .otherwise(\"/home\");\n        //\n        //    $stateProvider\n        //        .state('home', {\n        //            url: '/home',\n        //        })\n        //        .state('home.post', {\n        //            url: '/post/:postIndex',\n        //            templateUrl: 'views/all/partials/views/home/full_post.html'\n        //        })\n        //        .state('home.newPost', {\n        //            url: '/newPost',\n        //            templateUrl: 'views/all/partials/views/home/new_post.html'\n        //        })\n        //        .state('home.editPost', {\n        //            url: '/editPost/:postIndex',\n        //            templateUrl: 'views/all/partials/views/home/edit_post.html'\n        //        })\n        //        .state('home.search', {\n        //            url: '/search/:queryString/:pageNumber',\n        //            templateUrl: 'views/search/search_results.html'\n        //        })\n        //        .state('users', {\n        //            url: '/users',\n        //            templateUrl: 'views/all/partials/views/users/users.html'\n        //        })\n        //        .state(\"otherwise\", {url: '/home'});\n\n        //$locationProvider\n        //    .html5Mode(false)\n        //    .hashPrefix('!');\n\n        notificationsConfigProvider.setAutoHide(true);\n        notificationsConfigProvider.setHideDelay(10000);\n        notificationsConfigProvider.setAcceptHTML(true);\n    }])\n    .value('duScrollOffset', 60);","angular.module('app')\n    .controller('MainController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'mainService', 'socketService', 'globals',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, mainService, socketService, globals) {\n\n            //function that determines if it's okay for the user to proceed\n            $scope.checkAccountStatus = function (userData) {\n                if (userData) {\n                    if (userData.isRegistered) {\n                        if (userData.emailIsConfirmed == false) {\n                            return false;\n                        } else {\n                            if (userData.isApproved === false) {\n                                return false\n                            } else if (userData.isBanned) {\n                                if (userData.isBanned.status === true) {\n                                    //checking banned status\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            } else {\n                                return true;\n                            }\n                        }\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            };\n\n            //variable that holds the account status\n            $scope.accountStatusIsGood = false;\n\n            $rootScope.$on('userDataChanges', function () {\n                $scope.accountStatusIsGood = $scope.checkAccountStatus(globals.userData);\n            });\n        }\n    ]);"],"sourceRoot":"/source/"}