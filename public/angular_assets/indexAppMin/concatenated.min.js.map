{"version":3,"sources":["aindexApp.js","adirectives/accountOuter.js","adirectives/bannerDir.js","adirectives/contactUs.js","adirectives/createAccount.js","adirectives/logout.js","adirectives/resendEmail.js","adirectives/signIn.js","controllers/mainCtrl.js","filters/filters.js","services/functions.js","services/globals.js","services/mainFactory.js","services/socketIoService.js"],"names":["angular","module","run","$templateCache","$http","$rootScope","Utils","keys","Object","value","directive","logoutService","restrict","link","$scope","$element","$attrs","userLoginState","changeUserLoginState","newState","signInBanner","show","bannerClass","msg","$on","event","banner","registrationBanner","showToast","toastType","text","toastr","clear","success","warning","closeButton","tapToDismiss","error","timeOut","clearToasts","controller","cfpLoadingBar","isLoading","isLoadingPercentage","changeIsLoadingPercentage","num","showHideLoadingBanner","bool","$","removeClass","addClass","resp","status","isLoadingTrue","isLoadingFalse","templateUrl","socketService","validateContactUs","name","email","message","errors","length","contactUsModel","sendContactUs","formStatus","responseStatusHandler","errResp","registrationDetails","firstName","lastName","username","password1","password2","invitationCode","createAccount","errResponse","logoutClient","resendConfirmationEmail","userUniqueCuid","console","log","err","loginFormModel","password","submitLocalLoginForm","localUserLogin","$q","$filter","$log","$interval","$window","$location","socket","mainService","globals","initialRequests","getUserData","userData","broadcastUserData","clientIsRegistered","isRegistered","accountStatusIsGood","checkAccountStatus","emit","room","uniqueCuid","indexPageUrl","allData","emailIsConfirmed","isApproved","isBanned","$broadcast","filter","time","local","raw","Date","now","isDate","getTime","offset","Math","abs","span","MINUTE","HOUR","DAY","WEEK","YEAR","DECADE","round","join","createdAt","moment","format","post","posts","makeResp","postHeading","theElement","imgElement","imgWrappedInDiv","wrap","find","replaceWith","html","postContent","forEach","index","theElementString","checkSearchState","$state","current","queryString","$stateParams","stateHistory","hasOwnProperty","highLightThisText","textToHighlight","finalString","highlightDetails","highlight","theElement2","removeHighlight","makeBanner","universalDisable","redirect","location","href","redirectPage","disable","notify","type","newPostBanner","reason","warn","factory","calcObjectLength","obj","len","prop","documentTitle","port","host","data","getDocumentTitle","defaultDocumentTitle","changeDocumentTitle","newDocumentTitle","getLocationHost","on","info","done","url","io","connect","eventName","callback","args","arguments","$apply","apply","removeAllListeners","get","details","loginData"],"mappings":"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","file":"concatenated.min.js","sourcesContent":["angular.module('indexApp', [\n    'ui.bootstrap',\n    'angular-loading-bar',\n    'angulartics',\n    'angulartics.google.analytics',\n    'angularMoment',\n    'ui.router',\n    'duScroll',\n    'ngFx',\n    'ngAnimate',\n    'ui.utils'\n])\n    .run(function ($templateCache, $http) {\n        $rootScope.Utils = {\n            keys: Object.keys\n        }\n    });\n\n//configuration of various modules\nangular.module('indexApp', ['duScroll'])\n    .value('duScrollOffset', 60);","angular.module('indexApp')\n    .directive('accountOuterScope', ['$rootScope', function ($rootScope, logoutService) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //variable to hold state between local login and creating a new account\n                //values =  signIn, register\n                $scope.userLoginState = 'signIn';\n                $scope.changeUserLoginState = function (newState) {\n                    $scope.userLoginState = newState;\n                };\n            }\n        }\n    }]);","angular.module('indexApp')\n    .directive('signInBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.signInBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('signInBanner', function (event, banner) {\n                    $scope.signInBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.signInBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('registrationBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('registrationBanner', function (event, banner) {\n                    $scope.registrationBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.registrationBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('toastrDirective', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $rootScope.showToast = function (toastType, text) {\n                    switch (toastType) {\n                        case \"success\":\n                            toastr.clear();\n                            toastr.success(text);\n                            break;\n                        case \"warning\":\n                            toastr.clear();\n                            toastr.warning(text, 'Warning', {\n                                closeButton: true,\n                                tapToDismiss: true\n                            });\n                            break;\n                        case \"error\":\n                            toastr.clear();\n                            toastr.error(text, 'Error', {\n                                closeButton: true,\n                                tapToDismiss: true,\n                                timeOut: false\n                            });\n                            break;\n                        default:\n                            //clears current list of toasts\n                            toastr.clear();\n                    }\n                };\n\n                $rootScope.clearToasts = function () {\n                    toastr.clear();\n                };\n            }\n        }\n    }])\n    .directive('loadingBanner', ['$rootScope', function ($rootScope) {\n        var controller = ['$scope', '$rootScope', 'cfpLoadingBar', function ($scope, $rootScope, cfpLoadingBar) {\n\n            $rootScope.isLoading = false;\n            $rootScope.isLoadingPercentage = 0;\n            $rootScope.changeIsLoadingPercentage = function (num) {\n                $rootScope.isLoadingPercentage = num;\n            };\n\n            //hides or shows the loading splash screen\n            $rootScope.showHideLoadingBanner = function (bool) {\n                if (bool) {\n                    $('#loading-splash-card').removeClass('hidden');\n                    $('.hideMobileLoading').addClass('hidden-xs hidden-sm');\n                } else {\n                    $('#loading-splash-card').addClass('hidden');\n                    $('.hideMobileLoading').removeClass('hidden-xs hidden-sm');\n                }\n            };\n\n            $rootScope.$on('cfpLoadingBar:loading', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:loaded', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:completed', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.isLoadingTrue = function () {\n                $rootScope.isLoading = true;\n            };\n            $rootScope.isLoadingFalse = function () {\n                $rootScope.isLoading = false;\n            };\n\n            $rootScope.$on('isLoadingTrue', function () {\n                $rootScope.isLoading = true;\n            });\n\n            $rootScope.$on('isLoadingFalse', function () {\n                $rootScope.isLoading = false;\n            });\n        }];\n\n        return {\n            templateUrl: 'views/client/partials/templates/loading_banner.html',\n            restrict: 'AE',\n            controller: controller\n        }\n    }]);","angular.module('indexApp')\n    .directive('contactUsScope', ['$rootScope', 'socketService', function ($rootScope, socketService) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.contactUsModel = {\n                    name: \"\",\n                    email: \"\",\n                    message: \"\"\n                };\n\n                function validateContactUs(name, email, message) {\n                    var errors = 0;\n\n                    if (!name || name.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter your name\");\n                        return -1\n                    } else if (!email || email.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter a valid email\");\n                        return -1\n                    } else if (!message || message.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Message field is empty\");\n                        return -1;\n                    } else if (errors == 0) {\n                        return 1;\n                    }\n                }\n\n                $scope.sendContactUs = function () {\n                    var formStatus = validateContactUs($scope.contactUsModel.name, $scope.contactUsModel.email, $scope.contactUsModel.message);\n                    if (formStatus == 1) {\n                        socketService.sendContactUs($scope.contactUsModel)\n                            .success(function (resp) {\n                                $scope.contactUsModel.name = \"\";\n                                $scope.contactUsModel.email = \"\";\n                                $scope.contactUsModel.message = \"\";\n                                $rootScope.responseStatusHandler(resp);\n                            })\n                            .error(function (errResp) {\n                                $rootScope.responseStatusHandler(errResp);\n                            });\n                    }\n                };\n            }\n        }\n    }]);","angular.module('indexApp')\n    .directive('createAccountScope', ['$rootScope', 'socketService', function ($rootScope, socketService) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\",\n                    invitationCode: \"\"\n                };\n\n                $scope.createAccount = function () {\n                    socketService.createAccount($scope.registrationDetails)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            $scope.registrationDetails.invitationCode = \"\";\n                            $rootScope.responseStatusHandler(errResponse);\n                        });\n                };\n            }\n        }\n    }]);","angular.module('indexApp')\n    .directive('logoutScope', ['$rootScope', 'logoutService', function ($rootScope, logoutService) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.logoutClient = function () {\n                    logoutService.logoutClient()\n                        .success(function (resp) {\n                            $rootScope.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $rootScope.responseStatusHandler(errResponse);\n                        });\n                };\n            }\n        }\n    }]);","angular.module('indexApp')\n    .directive('resendEmailScope', ['$rootScope', 'socketService', function ($rootScope, socketService) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.resendConfirmationEmail = function (userUniqueCuid) {\n                    console.log(userUniqueCuid);\n                    socketService.resendConfirmationEmail(userUniqueCuid)\n                        .success(function (resp) {\n                            $rootScope.responseStatusHandler(resp);\n                        })\n                        .error(function (err) {\n                            $rootScope.responseStatusHandler(err);\n                        })\n                };\n            }\n        }\n    }]);","angular.module('indexApp')\n    .directive('signInScope', ['$rootScope', 'socketService', function ($rootScope, socketService) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\"\n                };\n\n                $scope.submitLocalLoginForm = function () {\n                    socketService.localUserLogin($scope.loginFormModel)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.responseStatusHandler(errResponse);\n                        });\n                };\n            }\n        }\n    }]);","angular.module('indexApp')\n    .controller('MainController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'mainService', 'socketService', 'globals',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, mainService, socketService, globals) {\n\n            $scope.indexPageUrl = globals.allData.indexPageUrl;\n\n            //register error handler error handler\n            $rootScope.responseStatusHandler = function (resp) {\n                $filter('responseFilter')(resp);\n            };\n\n            //function that determines if it's okay for the user to proceed\n            $scope.checkAccountStatus = function (userData) {\n                if (userData) {\n                    if (userData.isRegistered) {\n                        if (userData.emailIsConfirmed == false) {\n                            return false;\n                        } else {\n                            if (userData.isApproved === false) {\n                                return false\n                            } else if (userData.isBanned) {\n                                if (userData.isBanned.status === true) {\n                                    //checking banned status\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            } else {\n                                return true;\n                            }\n                        }\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            };\n\n            //this important function broadcasts the availability of the users data to directives that require\n            //it e.g. the account status directive\n            $scope.broadcastUserData = function () {\n                $rootScope.$broadcast('userDataChanges');\n            };\n\n            $scope.clientIsRegistered = false;\n\n            //variable that holds the account status\n            $scope.accountStatusIsGood = false;\n\n            //initial requests\n            function initialRequests() {\n                socketService.getUserData()\n                    .success(function (resp) {\n                        $scope.userData = globals.userData(resp.userData);\n                        $scope.broadcastUserData();\n\n                        //important isRegistered variable\n                        $scope.clientIsRegistered = $scope.userData.isRegistered;\n                        $scope.accountStatusIsGood = $scope.checkAccountStatus($scope.userData);\n\n                        if ($scope.userData.isRegistered) {\n                            //join a socketRoom for websocket connection, equivalent to user's uniqueCuid\n                            socket.emit('joinRoom', {\n                                room: resp.userData.uniqueCuid\n                            });\n                        }\n                        $rootScope.responseStatusHandler(resp);\n                    })\n                    .error(function (errResponse) {\n                        $rootScope.responseStatusHandler(errResponse);\n                    });\n            }\n\n            initialRequests();\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnectSuccess', function () {\n                initialRequests();\n            });\n        }\n    ]);","angular.module('indexApp')\n    .filter(\"timeago\", function () {\n        //time: the time\n        //local: compared to what time? default: now\n        //raw: whether you want in a format of \"5 minutes ago\", or \"5 minutes\"\n        return function (time, local, raw) {\n            if (!time) return \"never\";\n\n            if (!local) {\n                (local = Date.now())\n            }\n\n            if (angular.isDate(time)) {\n                time = time.getTime();\n            } else if (typeof time === \"string\") {\n                time = new Date(time).getTime();\n            }\n\n            if (angular.isDate(local)) {\n                local = local.getTime();\n            } else if (typeof local === \"string\") {\n                local = new Date(local).getTime();\n            }\n\n            if (typeof time !== 'number' || typeof local !== 'number') {\n                return;\n            }\n\n            var\n                offset = Math.abs((local - time) / 1000),\n                span = [],\n                MINUTE = 60,\n                HOUR = 3600,\n                DAY = 86400,\n                WEEK = 604800,\n                MONTH = 2629744,\n                YEAR = 31556926,\n                DECADE = 315569260;\n\n            if (offset <= MINUTE)              span = ['', raw ? 'now' : 'less than a minute'];\n            else if (offset < (MINUTE * 60))   span = [Math.round(Math.abs(offset / MINUTE)), 'min'];\n            else if (offset < (HOUR * 24))     span = [Math.round(Math.abs(offset / HOUR)), 'hr'];\n            else if (offset < (DAY * 7))       span = [Math.round(Math.abs(offset / DAY)), 'day'];\n            else if (offset < (WEEK * 52))     span = [Math.round(Math.abs(offset / WEEK)), 'week'];\n            else if (offset < (YEAR * 10))     span = [Math.round(Math.abs(offset / YEAR)), 'year'];\n            else if (offset < (DECADE * 100))  span = [Math.round(Math.abs(offset / DECADE)), 'decade'];\n            else                               span = ['', 'a long time'];\n\n            span[1] += (span[0] === 0 || span[0] > 1) ? 's' : '';\n            span = span.join(' ');\n\n            if (raw === true) {\n                return span;\n            }\n            return (time <= local) ? span + ' ago' : 'in ' + span;\n        }\n    })\n    .filter(\"getTimeAgo\", ['$filter', function ($filter) {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return $filter('timeago')(createdAt);\n        }\n    }])\n    .filter(\"getPostDate\", ['$filter', function () {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return moment(createdAt).format(\"ddd, MMM D, H:mm\");\n        }\n    }])\n    .filter(\"makeVideoIframesResponsive\", ['$filter', function () {\n        //making embedded videos responsive\n        return function (post, posts) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(post) {\n                if (post.postHeading) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postHeading + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postHeading = theElement.html();\n\n                }\n                if (post.postContent) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postContent + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postContent = theElement.html();\n                }\n                return post;\n            }\n\n            if (post) {\n                return makeResp(post)\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    posts[index] = makeResp(post);\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"highlightText\", ['$filter', '$rootScope', function ($filter, $rootScope) {\n        //making embedded videos responsive\n        return function (theElementString) {\n\n            //text is highlighted only if the present or previous state was search\n            //this fn checks if the present or previous state was search, and returns an object with status false if not\n            //if true, the returned object carries the queryString with it\n            function checkSearchState() {\n                //check latest state\n                if ($rootScope.$state.current.name == 'search') {\n                    return {\n                        status: true,\n                        queryString: $rootScope.$stateParams.queryString || \"\"\n                    }\n                } else if ($rootScope.stateHistory.length > 0) {\n                    if ($rootScope.stateHistory[$rootScope.stateHistory.length - 1].hasOwnProperty('search')) {\n                        //checking the previous state\n                        return {\n                            status: true,\n                            queryString: $rootScope.stateHistory[$rootScope.stateHistory.length - 1]['search'].queryString\n                        }\n                    } else {\n                        return {\n                            status: false\n                        }\n                    }\n                } else {\n                    return {\n                        status: false\n                    }\n                }\n            }\n\n            function highLightThisText(textToHighlight) {\n                var finalString = textToHighlight;\n                var highlightDetails = checkSearchState();\n                if (highlightDetails.status === true) {\n                    //highlight\n                    var theElement = $(\"<div>\" + textToHighlight + \"</div>\");\n                    $(theElement).highlight(highlightDetails.queryString);\n                    finalString = theElement.html();\n                } else {\n                    //remove highlight\n                    var theElement2 = $(\"<div>\" + textToHighlight + \"</div>\");\n                    $(theElement2).removeHighlight();\n                    finalString = theElement2.html();\n                }\n                return finalString;\n            }\n\n            return highLightThisText(theElementString);\n\n        }\n    }])\n    .filter(\"responseFilter\", ['$q', '$filter', '$log', '$interval', '$window', '$location', '$rootScope', 'globals', function ($q, $filter, $log, $interval, $window, $location, $rootScope, globals) {\n        //making embedded videos responsive\n        return function (resp) {\n\n            function makeBanner(show, bannerClass, msg) {\n                return {\n                    show: show ? true : false,\n                    bannerClass: bannerClass,\n                    msg: msg\n                }\n            }\n\n            $rootScope.universalDisable = false;\n\n            if (resp) {\n                if (resp.redirect) {\n                    if (resp.redirect) {\n                        $window.location.href = resp.redirectPage;\n                    }\n                }\n                if (resp.disable) {\n                    $rootScope.universalDisable = true;\n                }\n                if (resp.notify) {\n                    if (resp.type && resp.msg) {\n                        $rootScope.showToast(resp.type, resp.msg);\n                    }\n                }\n                if (resp.banner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('universalBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.newPostBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('newPostBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.signInBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('signInBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.registrationBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('registrationBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.reason) {\n                    $log.warn(resp.reason);\n                }\n            } else {\n                //do nothing\n            }\n\n            return true;\n        }\n    }]);\n\n\n","angular.module('indexApp')\n\n    .factory('fN', ['$q', '$location', '$window', '$rootScope', 'socketService',\n        function ($q, $location, $window, $rootScope, socketService) {\n            return {\n                calcObjectLength: function (obj) {\n                    var len = 0;\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            len++;\n                        }\n                    }\n                    return len\n                }\n            };\n        }]);","angular.module('indexApp')\n\n    .factory('globals', ['$q', '$location', '$window', '$rootScope', 'socketService',\n        function ($q, $location, $window, $rootScope, socketService) {\n            var userData = {};\n            var allData = {\n                documentTitle: \"Negus Math - College Level Advanced Mathematics for Kenya Students\",\n                indexPageUrl: $location.port() ? \"http://\" + $location.host() + \":\" + $location.port() + \"/index\" : $scope.indexPageUrl = \"http://\" + $location.host() + \"/index\"\n            };\n\n            var universalBanner = {\n                show: false,\n                bannerClass: \"\",\n                msg: \"\"\n            };\n\n            var registrationBanner = {\n                show: false,\n                bannerClass: \"\",\n                msg: \"\"\n            };\n\n            return {\n\n                userData: function (data) {\n                    if (data) {\n                        userData = data;\n                        return userData;\n                    } else {\n                        return userData;\n                    }\n                },\n\n                allData: allData,\n\n                getDocumentTitle: function () {\n                    return allData.documentTitle\n                },\n\n                defaultDocumentTitle: function () {\n                    allData.documentTitle = \"Negus Math - College Level Advanced Mathematics for Kenya Students\";\n                },\n\n                changeDocumentTitle: function (newDocumentTitle) {\n                    if (newDocumentTitle) {\n                        allData.documentTitle = newDocumentTitle;\n                    }\n                    return allData.documentTitle\n                },\n\n                getLocationHost: function () {\n                    if ($location.port()) {\n                        return \"http://\" + $location.host() + \":\" + $location.port();\n                    } else {\n                        return \"http://\" + $location.host();\n                    }\n                }\n            };\n        }]);","angular.module('indexApp')\n    .factory('mainService', ['$log', '$window', '$rootScope', 'socket', 'socketService', 'globals',\n        function ($log, $window, $rootScope, socket, socketService, globals) {\n\n            socket.on('reconnect', function () {\n                $log.info(\"'reconnect sequence' triggered\");\n                $rootScope.$broadcast('reconnectSuccess');\n            });\n\n            return {\n                done: function () {\n                    return 1;\n                }\n            };\n        }]);","angular.module('indexApp')\n\n    .factory('socket', ['$log', '$location', '$rootScope',\n        function ($log, $location, $rootScope) {\n            var url;\n            if ($location.port()) {\n                url = $location.host() + \":\" + $location.port();\n            } else {\n                url = $location.host();\n            }\n            var socket = io.connect(url);\n            //return socket;\n            return {\n                on: function (eventName, callback) {\n                    socket.on(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                },\n\n                emit: function (eventName, data, callback) {\n                    socket.emit(eventName, data, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            if (callback) {\n                                callback.apply(socket, args);\n                            }\n                        });\n                    });\n                },\n\n                removeAllListeners: function (eventName, callback) {\n                    socket.removeAllListeners(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                }\n            };\n        }])\n\n\n    .factory('socketService', ['$log', '$http', '$rootScope',\n        function ($log, $http, $rootScope) {\n\n            return {\n\n                getUserData: function () {\n                    return $http.get('/api/getUserData');\n                },\n\n                createAccount: function (details) {\n                    return $http.post('/createAccount', details);\n                },\n\n                localUserLogin: function (loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                },\n\n                resendConfirmationEmail: function (userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                },\n\n                sendContactUs: function (contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    ])\n\n    .factory('logoutService', ['$http',\n        function ($http) {\n            return {\n\n                logoutClient: function () {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }]);"],"sourceRoot":"/source/"}