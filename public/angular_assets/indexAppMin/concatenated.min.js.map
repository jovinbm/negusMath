{"version":3,"sources":["aindexApp.js","adirectives/bannerDir.js","adirectives/dir.js","controllers/mainCtrl.js","filters/filters.js","services/functions.js","services/globals.js","services/mainFactory.js","services/socketIoService.js"],"names":["angular","module","run","$templateCache","$http","directive","$rootScope","templateUrl","restrict","link","$scope","$element","$attrs","universalBanner","show","bannerClass","msg","$on","event","banner","showToast","toastType","text","toastr","clear","success","warning","closeButton","tapToDismiss","error","timeOut","clearToasts","controller","cfpLoadingBar","isLoading","isLoadingPercentage","changeIsLoadingPercentage","num","showHideLoadingBanner","bool","$","removeClass","addClass","resp","status","isLoadingTrue","isLoadingFalse","$window","$location","globals","mainSearchModel","queryString","postSearchUniqueCuid","requestedPage","fillSearchBox","$state","current","name","$stateParams","stateHistory","length","hasOwnProperty","performMainSearch","location","href","port","host","logoutService","logoutClient","responseStatusHandler","errResponse","userLoginState","changeUserLoginState","newState","socketService","loginFormModel","username","password","submitLocalLoginForm","localUserLogin","registrationDetails","email","firstName","lastName","password1","password2","invitationCode","createAccount","validateContactUs","message","errors","contactUsModel","sendContactUs","formStatus","errResp","$q","$filter","$log","$interval","socket","mainService","initialRequests","getUserData","userData","clientIsRegistered","isRegistered","emit","room","uniqueCuid","indexPageUrl","allData","on","console","log","filter","time","local","raw","Date","now","isDate","getTime","offset","Math","abs","span","MINUTE","HOUR","DAY","WEEK","YEAR","DECADE","round","join","createdAt","moment","format","post","posts","addUrl","postIndex","postUrl","forEach","index","makeResp","postSummary","theElement","imgElement","imgWrappedInDiv","wrap","find","replaceWith","html","postContent","theElementString","checkSearchState","highLightThisText","textToHighlight","finalString","highlightDetails","highlight","theElement2","removeHighlight","makeBanner","universalDisable","redirect","redirectPage","disable","notify","type","$broadcast","newPostBanner","registrationBanner","reason","warn","factory","calcObjectLength","obj","len","prop","documentTitle","data","getDocumentTitle","defaultDocumentTitle","changeDocumentTitle","newDocumentTitle","info","done","url","io","connect","eventName","callback","args","arguments","$apply","apply","removeAllListeners","get","details","loginData"],"mappings":"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","file":"concatenated.min.js","sourcesContent":["angular.module('indexApp', [\n    'ui.bootstrap',\n    'angular-loading-bar',\n    'angulartics',\n    'angulartics.google.analytics',\n    'angularMoment',\n    'ui.router',\n    'duScroll',\n    'ngFx',\n    'ngAnimate',\n    'ui.utils'\n])\n    .run(function ($templateCache, $http) {\n        //views\n\n        //partials\n        //partials->navs\n        //partials->modals\n    });","angular.module('indexApp')\n    .directive('universalBanner', ['$rootScope', function ($rootScope) {\n        return {\n            templateUrl: 'views/admin/partials/smalls/universal_banner.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.universalBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('universalBanner', function (event, banner) {\n                    $scope.universalBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.universalBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                })\n            }\n        }\n    }])\n    .directive('toastrDirective', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $rootScope.showToast = function (toastType, text) {\n                    switch (toastType) {\n                        case \"success\":\n                            toastr.clear();\n                            toastr.success(text);\n                            break;\n                        case \"warning\":\n                            toastr.clear();\n                            toastr.warning(text, 'Warning', {\n                                closeButton: true,\n                                tapToDismiss: true\n                            });\n                            break;\n                        case \"error\":\n                            toastr.clear();\n                            toastr.error(text, 'Error', {\n                                closeButton: true,\n                                tapToDismiss: true,\n                                timeOut: false\n                            });\n                            break;\n                        default:\n                            //clears current list of toasts\n                            toastr.clear();\n                    }\n                };\n\n                $rootScope.clearToasts = function () {\n                    toastr.clear();\n                };\n            }\n        }\n    }])\n    .directive('loadingBanner', ['$rootScope', function ($rootScope) {\n        var controller = ['$scope', '$rootScope', 'cfpLoadingBar', function ($scope, $rootScope, cfpLoadingBar) {\n\n            $rootScope.isLoading = false;\n            $rootScope.isLoadingPercentage = 0;\n            $rootScope.changeIsLoadingPercentage = function (num) {\n                $rootScope.isLoadingPercentage = num;\n            };\n\n            //hides or shows the loading splash screen\n            $rootScope.showHideLoadingBanner = function (bool) {\n                if (bool) {\n                    $('#loading-splash-card').removeClass('hidden');\n                    $('.hideMobileLoading').addClass('hidden-xs hidden-sm');\n                } else {\n                    $('#loading-splash-card').addClass('hidden');\n                    $('.hideMobileLoading').removeClass('hidden-xs hidden-sm');\n                }\n            };\n\n            $rootScope.$on('cfpLoadingBar:loading', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:loaded', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.$on('cfpLoadingBar:completed', function (event, resp) {\n                $rootScope.isLoadingPercentage = cfpLoadingBar.status() * 100\n            });\n\n            $rootScope.isLoadingTrue = function () {\n                $rootScope.isLoading = true;\n            };\n            $rootScope.isLoadingFalse = function () {\n                $rootScope.isLoading = false;\n            };\n\n            $rootScope.$on('isLoadingTrue', function () {\n                $rootScope.isLoading = true;\n            });\n\n            $rootScope.$on('isLoadingFalse', function () {\n                $rootScope.isLoading = false;\n            });\n        }];\n\n        return {\n            templateUrl: 'views/admin/partials/smalls/loading_banner.html',\n            restrict: 'AE',\n            controller: controller\n        }\n    }]);","angular.module('indexApp')\n    .directive('universalSearchBox', ['$window', '$location', '$rootScope', 'globals', function ($window, $location, $rootScope, globals) {\n        return {\n            templateUrl: 'views/admin/partials/smalls/universal_search_box.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.mainSearchModel = {\n                    queryString: \"\",\n                    postSearchUniqueCuid: \"\",\n                    requestedPage: 1\n                };\n\n                $scope.fillSearchBox = function () {\n                    //check latest state\n                    if ($rootScope.$state.current.name == 'search') {\n                        $scope.mainSearchModel.queryString = $rootScope.$stateParams.queryString ? $rootScope.$stateParams.queryString : \"\";\n                    } else if ($rootScope.stateHistory.length > 0) {\n                        if ($rootScope.stateHistory[$rootScope.stateHistory.length - 1].hasOwnProperty('search')) {\n                            //checking the previous state\n                            $scope.mainSearchModel.queryString = $rootScope.stateHistory[$rootScope.stateHistory.length - 1]['search'].queryString\n                        } else {\n                            $scope.mainSearchModel.queryString = \"\";\n                        }\n                    } else {\n                        $scope.mainSearchModel.queryString = \"\";\n                    }\n                };\n\n                $scope.fillSearchBox();\n\n                $scope.performMainSearch = function () {\n                    if ($scope.mainSearchModel.queryString.length > 0) {\n                        if ($location.port()) {\n                            $window.location.href = \"http://\" + $location.host() + \":\" + $location.port() + \"/#!/search/\" + $scope.mainSearchModel.queryString + \"/1\";\n                        } else {\n                            $window.location.href = \"http://\" + $location.host() + \"/#!/search/\" + $scope.mainSearchModel.queryString + \"/1\";\n                        }\n                    }\n                };\n            }\n        }\n    }])\n    .directive('topNav', ['$rootScope', 'logoutService', function ($rootScope, logoutService) {\n        return {\n\n            templateUrl: 'views/index/views/top_nav.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.logoutClient = function () {\n                    logoutService.logoutClient()\n                        .success(function (resp) {\n                            $rootScope.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $rootScope.responseStatusHandler(errResponse);\n                        });\n                };\n            }\n        }\n    }])\n    .directive('accountOuter', ['$rootScope', function ($rootScope, logoutService) {\n        return {\n            templateUrl: 'views/index/views/account_outer.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                //variable to hold state between local login and creating a new account\n                //values =  signIn, register\n                $scope.userLoginState = 'signIn';\n                $scope.changeUserLoginState = function (newState) {\n                    $scope.userLoginState = newState;\n                };\n            }\n        }\n    }])\n    .directive('signIn', ['$rootScope', 'socketService', function ($rootScope, socketService) {\n        return {\n            templateUrl: 'views/index/views/sign_in.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\"\n                };\n\n                $scope.submitLocalLoginForm = function () {\n                    socketService.localUserLogin($scope.loginFormModel)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.responseStatusHandler(errResponse);\n                        });\n                };\n            }\n        }\n    }])\n    .directive('createAccount', ['$rootScope', 'socketService', function ($rootScope, socketService) {\n        return {\n            templateUrl: 'views/index/views/create_account.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\",\n                    invitationCode: \"\"\n                };\n\n                $scope.createAccount = function () {\n                    socketService.createAccount($scope.registrationDetails)\n                        .success(function (resp) {\n                            //the responseStatusHandler handles all basic response stuff including redirecting the user if a success is picked\n                            $rootScope.responseStatusHandler(resp);\n                        })\n                        .error(function (errResponse) {\n\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            $scope.registrationDetails.invitationCode = \"\";\n                            $rootScope.responseStatusHandler(errResponse);\n                        });\n                };\n            }\n        }\n    }])\n    .directive('contactUs', ['$rootScope', 'socketService', function ($rootScope, socketService) {\n        return {\n            templateUrl: 'views/index/views/create_account.html',\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.contactUsModel = {\n                    name: \"\",\n                    email: \"\",\n                    message: \"\"\n                };\n\n                function validateContactUs(name, email, message) {\n                    var errors = 0;\n\n                    if (!name || name.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter your name\");\n                        return -1\n                    } else if (!email || email.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Please enter a valid email\");\n                        return -1\n                    } else if (!message || message.length == 0) {\n                        ++errors;\n                        $rootScope.showToast('warning', \"Message field is empty\");\n                        return -1;\n                    } else if (errors == 0) {\n                        return 1;\n                    }\n                }\n\n                $scope.sendContactUs = function () {\n                    var formStatus = validateContactUs($scope.contactUsModel.name, $scope.contactUsModel.email, $scope.contactUsModel.message);\n                    if (formStatus == 1) {\n                        socketService.sendContactUs($scope.contactUsModel)\n                            .success(function (resp) {\n                                $scope.contactUsModel.name = \"\";\n                                $scope.contactUsModel.email = \"\";\n                                $scope.contactUsModel.message = \"\";\n                                $rootScope.responseStatusHandler(resp);\n                            })\n                            .error(function (errResp) {\n                                $rootScope.responseStatusHandler(errResp);\n                            });\n                    }\n                };\n            }\n        }\n    }]);","angular.module('indexApp')\n    .controller('MainController', ['$q', '$filter', '$log', '$interval', '$window', '$location', '$scope', '$rootScope', 'socket', 'mainService', 'socketService', 'globals',\n        function ($q, $filter, $log, $interval, $window, $location, $scope, $rootScope, socket, mainService, socketService, globals) {\n\n            $scope.indexPageUrl = globals.allData.indexPageUrl;\n\n            //register error handler error handler\n            $rootScope.responseStatusHandler = function (resp) {\n                $filter('responseFilter')(resp);\n            };\n\n            $scope.clientIsRegistered = true;\n\n            //initial requests\n            function initialRequests() {\n                socketService.getUserData()\n                    .success(function (resp) {\n                        $scope.userData = globals.userData(resp.userData);\n                        $scope.clientIsRegistered = $scope.userData.isRegistered == 'yes';\n\n                        if ($scope.userData.isRegistered == 'yes') {\n                            //join a socketRoom for websocket connection, equivalent to user's uniqueCuid\n                            socket.emit('joinRoom', {\n                                room: resp.userData.uniqueCuid\n                            });\n                        }\n                        $rootScope.responseStatusHandler(resp);\n                    })\n                    .error(function (errResponse) {\n                        $rootScope.responseStatusHandler(errResponse);\n                    });\n            }\n\n            socket.on('joined', function () {\n                console.log(\"JOIN SUCCESS\");\n            });\n\n            initialRequests();\n\n\n            //===============socket listeners===============\n\n            $rootScope.$on('reconnectSuccess', function () {\n            });\n        }\n    ]);","angular.module('indexApp')\n    .filter(\"timeago\", function () {\n        //time: the time\n        //local: compared to what time? default: now\n        //raw: whether you want in a format of \"5 minutes ago\", or \"5 minutes\"\n        return function (time, local, raw) {\n            if (!time) return \"never\";\n\n            if (!local) {\n                (local = Date.now())\n            }\n\n            if (angular.isDate(time)) {\n                time = time.getTime();\n            } else if (typeof time === \"string\") {\n                time = new Date(time).getTime();\n            }\n\n            if (angular.isDate(local)) {\n                local = local.getTime();\n            } else if (typeof local === \"string\") {\n                local = new Date(local).getTime();\n            }\n\n            if (typeof time !== 'number' || typeof local !== 'number') {\n                return;\n            }\n\n            var\n                offset = Math.abs((local - time) / 1000),\n                span = [],\n                MINUTE = 60,\n                HOUR = 3600,\n                DAY = 86400,\n                WEEK = 604800,\n                MONTH = 2629744,\n                YEAR = 31556926,\n                DECADE = 315569260;\n\n            if (offset <= MINUTE)              span = ['', raw ? 'now' : 'less than a minute'];\n            else if (offset < (MINUTE * 60))   span = [Math.round(Math.abs(offset / MINUTE)), 'min'];\n            else if (offset < (HOUR * 24))     span = [Math.round(Math.abs(offset / HOUR)), 'hr'];\n            else if (offset < (DAY * 7))       span = [Math.round(Math.abs(offset / DAY)), 'day'];\n            else if (offset < (WEEK * 52))     span = [Math.round(Math.abs(offset / WEEK)), 'week'];\n            else if (offset < (YEAR * 10))     span = [Math.round(Math.abs(offset / YEAR)), 'year'];\n            else if (offset < (DECADE * 100))  span = [Math.round(Math.abs(offset / DECADE)), 'decade'];\n            else                               span = ['', 'a long time'];\n\n            span[1] += (span[0] === 0 || span[0] > 1) ? 's' : '';\n            span = span.join(' ');\n\n            if (raw === true) {\n                return span;\n            }\n            return (time <= local) ? span + ' ago' : 'in ' + span;\n        }\n    })\n    .filter(\"AddTimeAgo\", ['$filter', function ($filter) {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return $filter('timeago')(createdAt);\n        }\n    }])\n    .filter(\"AddPostDate\", ['$filter', function () {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (createdAt) {\n            return moment(createdAt).format(\"ddd, MMM D, H:mm\");\n        }\n    }])\n    .filter(\"AddPostUrl\", ['$filter', function () {\n        //takes in a post or an array of posts, and adds a timeAgo key in them\n        return function (post, posts) {\n            function addUrl(post) {\n                if (post.postIndex) {\n                    post.postUrl = 'http://www.negusmath.com/#!/post/' + post.postIndex;\n                }\n                return post;\n            }\n\n            if (post) {\n                return addUrl(post);\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    posts[index] = addUrl(post);\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"makeVideoIframesResponsive\", ['$filter', function () {\n        //making embedded videos responsive\n        return function (post, posts) {\n            var theElement;\n            var imgElement;\n            var imgWrappedInDiv;\n\n            function makeResp(post) {\n                if (post.postSummary) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postSummary + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postSummary = theElement.html();\n\n                }\n                if (post.postContent) {\n                    //convert the element to string\n                    theElement = $(\"<div>\" + post.postContent + \"</div>\");\n\n                    //find the video iframe elements\n                    imgElement = $('img.ta-insert-video', theElement);\n\n                    //only perform operation if there are iframes available\n                    if (imgElement.length > 0) {\n\n                        //add class and wrap in div\n                        imgWrappedInDiv = imgElement\n                            .addClass('embed-responsive-item')\n                            .wrap(\"<div class='embed-responsive embed-responsive-16by9'></div>\");\n\n                        //replace in original\n                        theElement.find('img').replaceWith(imgWrappedInDiv);\n                    }\n                    post.postContent = theElement.html();\n                }\n                return post;\n            }\n\n            if (post) {\n                return makeResp(post)\n            } else if (posts) {\n                posts.forEach(function (post, index) {\n                    posts[index] = makeResp(post);\n                });\n                return posts;\n            }\n        }\n    }])\n    .filter(\"highlightText\", ['$filter', '$rootScope', function ($filter, $rootScope) {\n        //making embedded videos responsive\n        return function (theElementString) {\n\n            //text is highlighted only if the present or previous state was search\n            //this fn checks if the present or previous state was search, and returns an object with status false if not\n            //if true, the returned object carries the queryString with it\n            function checkSearchState() {\n                //check latest state\n                if ($rootScope.$state.current.name == 'search') {\n                    return {\n                        status: true,\n                        queryString: $rootScope.$stateParams.queryString || \"\"\n                    }\n                } else if ($rootScope.stateHistory.length > 0) {\n                    if ($rootScope.stateHistory[$rootScope.stateHistory.length - 1].hasOwnProperty('search')) {\n                        //checking the previous state\n                        return {\n                            status: true,\n                            queryString: $rootScope.stateHistory[$rootScope.stateHistory.length - 1]['search'].queryString\n                        }\n                    } else {\n                        return {\n                            status: false\n                        }\n                    }\n                } else {\n                    return {\n                        status: false\n                    }\n                }\n            }\n\n            function highLightThisText(textToHighlight) {\n                var finalString = textToHighlight;\n                var highlightDetails = checkSearchState();\n                if (highlightDetails.status === true) {\n                    //highlight\n                    var theElement = $(\"<div>\" + textToHighlight + \"</div>\");\n                    $(theElement).highlight(highlightDetails.queryString);\n                    finalString = theElement.html();\n                } else {\n                    //remove highlight\n                    var theElement2 = $(\"<div>\" + textToHighlight + \"</div>\");\n                    $(theElement2).removeHighlight();\n                    finalString = theElement2.html();\n                }\n                return finalString;\n            }\n\n            return highLightThisText(theElementString);\n\n        }\n    }])\n    .filter(\"responseFilter\", ['$q', '$filter', '$log', '$interval', '$window', '$location', '$rootScope', 'globals', function ($q, $filter, $log, $interval, $window, $location, $rootScope, globals) {\n        //making embedded videos responsive\n        return function (resp) {\n\n            function makeBanner(show, bannerClass, msg) {\n                return {\n                    show: show ? true : false,\n                    bannerClass: bannerClass,\n                    msg: msg\n                }\n            }\n\n            $rootScope.universalDisable = false;\n\n            if (resp) {\n                if (resp.redirect) {\n                    if (resp.redirect) {\n                        $window.location.href = resp.redirectPage;\n                    }\n                }\n                if (resp.disable) {\n                    $rootScope.universalDisable = true;\n                }\n                if (resp.notify) {\n                    if (resp.type && resp.msg) {\n                        $rootScope.showToast(resp.type, resp.msg);\n                    }\n                }\n                if (resp.banner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('universalBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.newPostBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('newPostBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.registrationBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('registrationBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.reason) {\n                    $log.warn(resp.reason);\n                }\n            } else {\n                //do nothing\n            }\n\n            return true;\n        }\n    }]);\n\n\n","angular.module('indexApp')\n\n    .factory('fN', ['$q', '$location', '$window', '$rootScope', 'socketService',\n        function ($q, $location, $window, $rootScope, socketService) {\n            return {\n                calcObjectLength: function (obj) {\n                    var len = 0;\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            len++;\n                        }\n                    }\n                    return len\n                }\n            };\n        }]);","angular.module('indexApp')\n\n    .factory('globals', ['$q', '$location', '$window', '$rootScope', 'socketService',\n        function ($q, $location, $window, $rootScope, socketService) {\n            var userData = {};\n            var allData = {\n                documentTitle: \"Negus Math - College Level Advanced Mathematics for Kenya Students\",\n                indexPageUrl: $location.port() ? \"http://\" + $location.host() + \":\" + $location.port() + \"/index\" : $scope.indexPageUrl = \"http://\" + $location.host() + \"/index\"\n            };\n\n            var universalBanner = {\n                show: false,\n                bannerClass: \"\",\n                msg: \"\"\n            };\n\n            var registrationBanner = {\n                show: false,\n                bannerClass: \"\",\n                msg: \"\"\n            };\n\n            return {\n\n                userData: function (data) {\n                    if (data) {\n                        userData = data;\n                        return userData;\n                    } else {\n                        return userData;\n                    }\n                },\n\n                allData: allData,\n\n                getDocumentTitle: function () {\n                    return allData.documentTitle\n                },\n\n                defaultDocumentTitle: function () {\n                    allData.documentTitle = \"Negus Math - College Level Advanced Mathematics for Kenya Students\";\n                },\n\n                changeDocumentTitle: function (newDocumentTitle) {\n                    if (newDocumentTitle) {\n                        allData.documentTitle = newDocumentTitle;\n                    }\n                    return allData.documentTitle\n                }\n            };\n        }]);","angular.module('indexApp')\n    .factory('mainService', ['$log', '$window', '$rootScope', 'socket', 'socketService', 'globals',\n        function ($log, $window, $rootScope, socket, socketService, globals) {\n\n            socket.on('reconnect', function () {\n                $log.info(\"'reconnect sequence' triggered\");\n                $rootScope.$broadcast('reconnectSuccess');\n            });\n\n            return {\n                done: function () {\n                    return 1;\n                }\n            };\n        }]);","angular.module('indexApp')\n\n    .factory('socket', ['$log', '$location', '$rootScope',\n        function ($log, $location, $rootScope) {\n            var url;\n            if ($location.port()) {\n                url = $location.host() + \":\" + $location.port();\n            } else {\n                url = $location.host();\n            }\n            var socket = io.connect(url);\n            //return socket;\n            return {\n                on: function (eventName, callback) {\n                    socket.on(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                },\n\n                emit: function (eventName, data, callback) {\n                    socket.emit(eventName, data, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            if (callback) {\n                                callback.apply(socket, args);\n                            }\n                        });\n                    });\n                },\n\n                removeAllListeners: function (eventName, callback) {\n                    socket.removeAllListeners(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                }\n            };\n        }])\n\n\n    .factory('socketService', ['$log', '$http', '$rootScope',\n        function ($log, $http, $rootScope) {\n\n            return {\n\n                getUserData: function () {\n                    return $http.get('/api/getUserData');\n                },\n\n                createAccount: function (details) {\n                    return $http.post('/createAccount', details);\n                },\n\n                localUserLogin: function (loginData) {\n                    return $http.post('/localUserLogin', loginData);\n                },\n\n                sendContactUs: function (contactUsModel) {\n                    return $http.post('/contactUs', contactUsModel);\n                }\n            }\n        }\n    ])\n\n    .factory('logoutService', ['$http',\n        function ($http) {\n            return {\n\n                logoutClient: function () {\n                    return $http.post('/api/logoutClient');\n                }\n            }\n        }]);"],"sourceRoot":"/source/"}